
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 5f 00 00 	mov    0x5fd9(%rip),%rax        # 6fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 ba 5e 00 00    	pushq  0x5eba(%rip)        # 6ee0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 bb 5e 00 00 	bnd jmpq *0x5ebb(%rip)        # 6ee8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	pushq  $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmpq 1020 <.plt>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	pushq  $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmpq 1020 <.plt>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	pushq  $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmpq 1020 <.plt>
    111f:	90                   	nop
    1120:	f3 0f 1e fa          	endbr64 
    1124:	68 0f 00 00 00       	pushq  $0xf
    1129:	f2 e9 f1 fe ff ff    	bnd jmpq 1020 <.plt>
    112f:	90                   	nop
    1130:	f3 0f 1e fa          	endbr64 
    1134:	68 10 00 00 00       	pushq  $0x10
    1139:	f2 e9 e1 fe ff ff    	bnd jmpq 1020 <.plt>
    113f:	90                   	nop
    1140:	f3 0f 1e fa          	endbr64 
    1144:	68 11 00 00 00       	pushq  $0x11
    1149:	f2 e9 d1 fe ff ff    	bnd jmpq 1020 <.plt>
    114f:	90                   	nop
    1150:	f3 0f 1e fa          	endbr64 
    1154:	68 12 00 00 00       	pushq  $0x12
    1159:	f2 e9 c1 fe ff ff    	bnd jmpq 1020 <.plt>
    115f:	90                   	nop
    1160:	f3 0f 1e fa          	endbr64 
    1164:	68 13 00 00 00       	pushq  $0x13
    1169:	f2 e9 b1 fe ff ff    	bnd jmpq 1020 <.plt>
    116f:	90                   	nop
    1170:	f3 0f 1e fa          	endbr64 
    1174:	68 14 00 00 00       	pushq  $0x14
    1179:	f2 e9 a1 fe ff ff    	bnd jmpq 1020 <.plt>
    117f:	90                   	nop
    1180:	f3 0f 1e fa          	endbr64 
    1184:	68 15 00 00 00       	pushq  $0x15
    1189:	f2 e9 91 fe ff ff    	bnd jmpq 1020 <.plt>
    118f:	90                   	nop
    1190:	f3 0f 1e fa          	endbr64 
    1194:	68 16 00 00 00       	pushq  $0x16
    1199:	f2 e9 81 fe ff ff    	bnd jmpq 1020 <.plt>
    119f:	90                   	nop
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	68 17 00 00 00       	pushq  $0x17
    11a9:	f2 e9 71 fe ff ff    	bnd jmpq 1020 <.plt>
    11af:	90                   	nop
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	68 18 00 00 00       	pushq  $0x18
    11b9:	f2 e9 61 fe ff ff    	bnd jmpq 1020 <.plt>
    11bf:	90                   	nop
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	68 19 00 00 00       	pushq  $0x19
    11c9:	f2 e9 51 fe ff ff    	bnd jmpq 1020 <.plt>
    11cf:	90                   	nop
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	68 1a 00 00 00       	pushq  $0x1a
    11d9:	f2 e9 41 fe ff ff    	bnd jmpq 1020 <.plt>
    11df:	90                   	nop
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	68 1b 00 00 00       	pushq  $0x1b
    11e9:	f2 e9 31 fe ff ff    	bnd jmpq 1020 <.plt>
    11ef:	90                   	nop
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	68 1c 00 00 00       	pushq  $0x1c
    11f9:	f2 e9 21 fe ff ff    	bnd jmpq 1020 <.plt>
    11ff:	90                   	nop

Disassembly of section .plt.got:

0000000000001200 <__cxa_finalize@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 ed 5d 00 00 	bnd jmpq *0x5ded(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001210 <getenv@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 d5 5c 00 00 	bnd jmpq *0x5cd5(%rip)        # 6ef0 <getenv@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001220 <free@plt>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	f2 ff 25 cd 5c 00 00 	bnd jmpq *0x5ccd(%rip)        # 6ef8 <free@GLIBC_2.2.5>
    122b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001230 <strcasecmp@plt>:
    1230:	f3 0f 1e fa          	endbr64 
    1234:	f2 ff 25 c5 5c 00 00 	bnd jmpq *0x5cc5(%rip)        # 6f00 <strcasecmp@GLIBC_2.2.5>
    123b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001240 <__errno_location@plt>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	f2 ff 25 bd 5c 00 00 	bnd jmpq *0x5cbd(%rip)        # 6f08 <__errno_location@GLIBC_2.2.5>
    124b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001250 <strcpy@plt>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	f2 ff 25 b5 5c 00 00 	bnd jmpq *0x5cb5(%rip)        # 6f10 <strcpy@GLIBC_2.2.5>
    125b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001260 <puts@plt>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	f2 ff 25 ad 5c 00 00 	bnd jmpq *0x5cad(%rip)        # 6f18 <puts@GLIBC_2.2.5>
    126b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001270 <write@plt>:
    1270:	f3 0f 1e fa          	endbr64 
    1274:	f2 ff 25 a5 5c 00 00 	bnd jmpq *0x5ca5(%rip)        # 6f20 <write@GLIBC_2.2.5>
    127b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001280 <__stack_chk_fail@plt>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	f2 ff 25 9d 5c 00 00 	bnd jmpq *0x5c9d(%rip)        # 6f28 <__stack_chk_fail@GLIBC_2.4>
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <alarm@plt>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	f2 ff 25 95 5c 00 00 	bnd jmpq *0x5c95(%rip)        # 6f30 <alarm@GLIBC_2.2.5>
    129b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012a0 <close@plt>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	f2 ff 25 8d 5c 00 00 	bnd jmpq *0x5c8d(%rip)        # 6f38 <close@GLIBC_2.2.5>
    12ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012b0 <read@plt>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	f2 ff 25 85 5c 00 00 	bnd jmpq *0x5c85(%rip)        # 6f40 <read@GLIBC_2.2.5>
    12bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012c0 <fgets@plt>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	f2 ff 25 7d 5c 00 00 	bnd jmpq *0x5c7d(%rip)        # 6f48 <fgets@GLIBC_2.2.5>
    12cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012d0 <signal@plt>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	f2 ff 25 75 5c 00 00 	bnd jmpq *0x5c75(%rip)        # 6f50 <signal@GLIBC_2.2.5>
    12db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012e0 <gethostbyname@plt>:
    12e0:	f3 0f 1e fa          	endbr64 
    12e4:	f2 ff 25 6d 5c 00 00 	bnd jmpq *0x5c6d(%rip)        # 6f58 <gethostbyname@GLIBC_2.2.5>
    12eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000012f0 <__memmove_chk@plt>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	f2 ff 25 65 5c 00 00 	bnd jmpq *0x5c65(%rip)        # 6f60 <__memmove_chk@GLIBC_2.3.4>
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001300 <memcpy@plt>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	f2 ff 25 5d 5c 00 00 	bnd jmpq *0x5c5d(%rip)        # 6f68 <memcpy@GLIBC_2.14>
    130b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001310 <malloc@plt>:
    1310:	f3 0f 1e fa          	endbr64 
    1314:	f2 ff 25 55 5c 00 00 	bnd jmpq *0x5c55(%rip)        # 6f70 <malloc@GLIBC_2.2.5>
    131b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001320 <fflush@plt>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	f2 ff 25 4d 5c 00 00 	bnd jmpq *0x5c4d(%rip)        # 6f78 <fflush@GLIBC_2.2.5>
    132b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001330 <__isoc99_sscanf@plt>:
    1330:	f3 0f 1e fa          	endbr64 
    1334:	f2 ff 25 45 5c 00 00 	bnd jmpq *0x5c45(%rip)        # 6f80 <__isoc99_sscanf@GLIBC_2.7>
    133b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001340 <__printf_chk@plt>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	f2 ff 25 3d 5c 00 00 	bnd jmpq *0x5c3d(%rip)        # 6f88 <__printf_chk@GLIBC_2.3.4>
    134b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001350 <fopen@plt>:
    1350:	f3 0f 1e fa          	endbr64 
    1354:	f2 ff 25 35 5c 00 00 	bnd jmpq *0x5c35(%rip)        # 6f90 <fopen@GLIBC_2.2.5>
    135b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001360 <gethostname@plt>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	f2 ff 25 2d 5c 00 00 	bnd jmpq *0x5c2d(%rip)        # 6f98 <gethostname@GLIBC_2.2.5>
    136b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001370 <exit@plt>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	f2 ff 25 25 5c 00 00 	bnd jmpq *0x5c25(%rip)        # 6fa0 <exit@GLIBC_2.2.5>
    137b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001380 <connect@plt>:
    1380:	f3 0f 1e fa          	endbr64 
    1384:	f2 ff 25 1d 5c 00 00 	bnd jmpq *0x5c1d(%rip)        # 6fa8 <connect@GLIBC_2.2.5>
    138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001390 <__fprintf_chk@plt>:
    1390:	f3 0f 1e fa          	endbr64 
    1394:	f2 ff 25 15 5c 00 00 	bnd jmpq *0x5c15(%rip)        # 6fb0 <__fprintf_chk@GLIBC_2.3.4>
    139b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013a0 <sleep@plt>:
    13a0:	f3 0f 1e fa          	endbr64 
    13a4:	f2 ff 25 0d 5c 00 00 	bnd jmpq *0x5c0d(%rip)        # 6fb8 <sleep@GLIBC_2.2.5>
    13ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013b0 <__ctype_b_loc@plt>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	f2 ff 25 05 5c 00 00 	bnd jmpq *0x5c05(%rip)        # 6fc0 <__ctype_b_loc@GLIBC_2.3>
    13bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013c0 <__sprintf_chk@plt>:
    13c0:	f3 0f 1e fa          	endbr64 
    13c4:	f2 ff 25 fd 5b 00 00 	bnd jmpq *0x5bfd(%rip)        # 6fc8 <__sprintf_chk@GLIBC_2.3.4>
    13cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000013d0 <socket@plt>:
    13d0:	f3 0f 1e fa          	endbr64 
    13d4:	f2 ff 25 f5 5b 00 00 	bnd jmpq *0x5bf5(%rip)        # 6fd0 <socket@GLIBC_2.2.5>
    13db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000013e0 <_start>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	31 ed                	xor    %ebp,%ebp
    13e6:	49 89 d1             	mov    %rdx,%r9
    13e9:	5e                   	pop    %rsi
    13ea:	48 89 e2             	mov    %rsp,%rdx
    13ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    13f1:	50                   	push   %rax
    13f2:	54                   	push   %rsp
    13f3:	4c 8d 05 b6 1e 00 00 	lea    0x1eb6(%rip),%r8        # 32b0 <__libc_csu_fini>
    13fa:	48 8d 0d 3f 1e 00 00 	lea    0x1e3f(%rip),%rcx        # 3240 <__libc_csu_init>
    1401:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 14c9 <main>
    1408:	ff 15 d2 5b 00 00    	callq  *0x5bd2(%rip)        # 6fe0 <__libc_start_main@GLIBC_2.2.5>
    140e:	f4                   	hlt    
    140f:	90                   	nop

0000000000001410 <deregister_tm_clones>:
    1410:	48 8d 3d 49 70 00 00 	lea    0x7049(%rip),%rdi        # 8460 <stdout@@GLIBC_2.2.5>
    1417:	48 8d 05 42 70 00 00 	lea    0x7042(%rip),%rax        # 8460 <stdout@@GLIBC_2.2.5>
    141e:	48 39 f8             	cmp    %rdi,%rax
    1421:	74 15                	je     1438 <deregister_tm_clones+0x28>
    1423:	48 8b 05 ae 5b 00 00 	mov    0x5bae(%rip),%rax        # 6fd8 <_ITM_deregisterTMCloneTable>
    142a:	48 85 c0             	test   %rax,%rax
    142d:	74 09                	je     1438 <deregister_tm_clones+0x28>
    142f:	ff e0                	jmpq   *%rax
    1431:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1438:	c3                   	retq   
    1439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001440 <register_tm_clones>:
    1440:	48 8d 3d 19 70 00 00 	lea    0x7019(%rip),%rdi        # 8460 <stdout@@GLIBC_2.2.5>
    1447:	48 8d 35 12 70 00 00 	lea    0x7012(%rip),%rsi        # 8460 <stdout@@GLIBC_2.2.5>
    144e:	48 29 fe             	sub    %rdi,%rsi
    1451:	48 89 f0             	mov    %rsi,%rax
    1454:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1458:	48 c1 f8 03          	sar    $0x3,%rax
    145c:	48 01 c6             	add    %rax,%rsi
    145f:	48 d1 fe             	sar    %rsi
    1462:	74 14                	je     1478 <register_tm_clones+0x38>
    1464:	48 8b 05 85 5b 00 00 	mov    0x5b85(%rip),%rax        # 6ff0 <_ITM_registerTMCloneTable>
    146b:	48 85 c0             	test   %rax,%rax
    146e:	74 08                	je     1478 <register_tm_clones+0x38>
    1470:	ff e0                	jmpq   *%rax
    1472:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1478:	c3                   	retq   
    1479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001480 <__do_global_dtors_aux>:
    1480:	f3 0f 1e fa          	endbr64 
    1484:	80 3d fd 6f 00 00 00 	cmpb   $0x0,0x6ffd(%rip)        # 8488 <completed.8060>
    148b:	75 2b                	jne    14b8 <__do_global_dtors_aux+0x38>
    148d:	55                   	push   %rbp
    148e:	48 83 3d 62 5b 00 00 	cmpq   $0x0,0x5b62(%rip)        # 6ff8 <__cxa_finalize@GLIBC_2.2.5>
    1495:	00 
    1496:	48 89 e5             	mov    %rsp,%rbp
    1499:	74 0c                	je     14a7 <__do_global_dtors_aux+0x27>
    149b:	48 8b 3d 66 5b 00 00 	mov    0x5b66(%rip),%rdi        # 7008 <__dso_handle>
    14a2:	e8 59 fd ff ff       	callq  1200 <__cxa_finalize@plt>
    14a7:	e8 64 ff ff ff       	callq  1410 <deregister_tm_clones>
    14ac:	c6 05 d5 6f 00 00 01 	movb   $0x1,0x6fd5(%rip)        # 8488 <completed.8060>
    14b3:	5d                   	pop    %rbp
    14b4:	c3                   	retq   
    14b5:	0f 1f 00             	nopl   (%rax)
    14b8:	c3                   	retq   
    14b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000014c0 <frame_dummy>:
    14c0:	f3 0f 1e fa          	endbr64 
    14c4:	e9 77 ff ff ff       	jmpq   1440 <register_tm_clones>

00000000000014c9 <main>:
    14c9:	f3 0f 1e fa          	endbr64 
    14cd:	53                   	push   %rbx
    14ce:	83 ff 01             	cmp    $0x1,%edi
    14d1:	74 51                	je     1524 <main+0x5b>
    14d3:	48 89 f3             	mov    %rsi,%rbx
    14d6:	83 ff 02             	cmp    $0x2,%edi
    14d9:	75 7b                	jne    1556 <main+0x8d>
    14db:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    14df:	48 8d 35 d0 32 00 00 	lea    0x32d0(%rip),%rsi        # 47b6 <transition_table+0x3d6>
    14e6:	e8 65 fe ff ff       	callq  1350 <fopen@plt>
    14eb:	48 89 05 9e 6f 00 00 	mov    %rax,0x6f9e(%rip)        # 8490 <infile>
    14f2:	48 85 c0             	test   %rax,%rax
    14f5:	74 3d                	je     1534 <main+0x6b>
    14f7:	e8 a6 08 00 00       	callq  1da2 <initialize_bomb>
    14fc:	48 89 c3             	mov    %rax,%rbx
    14ff:	81 38 11 fa 22 20    	cmpl   $0x2022fa11,(%rax)
    1505:	74 72                	je     1579 <main+0xb0>
    1507:	48 8d 35 7a 2b 00 00 	lea    0x2b7a(%rip),%rsi        # 4088 <_IO_stdin_used+0x88>
    150e:	bf 01 00 00 00       	mov    $0x1,%edi
    1513:	b8 00 00 00 00       	mov    $0x0,%eax
    1518:	e8 23 fe ff ff       	callq  1340 <__printf_chk@plt>
    151d:	b8 00 00 00 00       	mov    $0x0,%eax
    1522:	5b                   	pop    %rbx
    1523:	c3                   	retq   
    1524:	48 8b 05 45 6f 00 00 	mov    0x6f45(%rip),%rax        # 8470 <stdin@@GLIBC_2.2.5>
    152b:	48 89 05 5e 6f 00 00 	mov    %rax,0x6f5e(%rip)        # 8490 <infile>
    1532:	eb c3                	jmp    14f7 <main+0x2e>
    1534:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    1538:	48 8b 13             	mov    (%rbx),%rdx
    153b:	48 8d 35 c2 2a 00 00 	lea    0x2ac2(%rip),%rsi        # 4004 <_IO_stdin_used+0x4>
    1542:	bf 01 00 00 00       	mov    $0x1,%edi
    1547:	e8 f4 fd ff ff       	callq  1340 <__printf_chk@plt>
    154c:	bf 08 00 00 00       	mov    $0x8,%edi
    1551:	e8 1a fe ff ff       	callq  1370 <exit@plt>
    1556:	48 8b 16             	mov    (%rsi),%rdx
    1559:	48 8d 35 c1 2a 00 00 	lea    0x2ac1(%rip),%rsi        # 4021 <_IO_stdin_used+0x21>
    1560:	bf 01 00 00 00       	mov    $0x1,%edi
    1565:	b8 00 00 00 00       	mov    $0x0,%eax
    156a:	e8 d1 fd ff ff       	callq  1340 <__printf_chk@plt>
    156f:	bf 08 00 00 00       	mov    $0x8,%edi
    1574:	e8 f7 fd ff ff       	callq  1370 <exit@plt>
    1579:	48 8d 3d 48 2b 00 00 	lea    0x2b48(%rip),%rdi        # 40c8 <_IO_stdin_used+0xc8>
    1580:	e8 db fc ff ff       	callq  1260 <puts@plt>
    1585:	48 8d 3d 7c 2b 00 00 	lea    0x2b7c(%rip),%rdi        # 4108 <_IO_stdin_used+0x108>
    158c:	e8 cf fc ff ff       	callq  1260 <puts@plt>
    1591:	e8 c5 0c 00 00       	callq  225b <read_line>
    1596:	48 89 c7             	mov    %rax,%rdi
    1599:	e8 0f 02 00 00       	callq  17ad <phase_1>
    159e:	48 89 df             	mov    %rbx,%rdi
    15a1:	e8 00 0e 00 00       	callq  23a6 <phase_defused>
    15a6:	48 8d 3d 9b 2b 00 00 	lea    0x2b9b(%rip),%rdi        # 4148 <_IO_stdin_used+0x148>
    15ad:	e8 ae fc ff ff       	callq  1260 <puts@plt>
    15b2:	e8 a4 0c 00 00       	callq  225b <read_line>
    15b7:	48 89 c7             	mov    %rax,%rdi
    15ba:	e8 12 02 00 00       	callq  17d1 <phase_2>
    15bf:	48 89 df             	mov    %rbx,%rdi
    15c2:	e8 df 0d 00 00       	callq  23a6 <phase_defused>
    15c7:	48 8d 3d 6d 2a 00 00 	lea    0x2a6d(%rip),%rdi        # 403b <_IO_stdin_used+0x3b>
    15ce:	e8 8d fc ff ff       	callq  1260 <puts@plt>
    15d3:	e8 83 0c 00 00       	callq  225b <read_line>
    15d8:	48 89 c7             	mov    %rax,%rdi
    15db:	e8 6e 02 00 00       	callq  184e <phase_3>
    15e0:	48 89 df             	mov    %rbx,%rdi
    15e3:	e8 be 0d 00 00       	callq  23a6 <phase_defused>
    15e8:	48 8d 3d 69 2a 00 00 	lea    0x2a69(%rip),%rdi        # 4058 <_IO_stdin_used+0x58>
    15ef:	e8 6c fc ff ff       	callq  1260 <puts@plt>
    15f4:	e8 62 0c 00 00       	callq  225b <read_line>
    15f9:	48 89 c7             	mov    %rax,%rdi
    15fc:	e8 71 03 00 00       	callq  1972 <phase_4>
    1601:	48 89 df             	mov    %rbx,%rdi
    1604:	e8 9d 0d 00 00       	callq  23a6 <phase_defused>
    1609:	48 8d 3d 68 2b 00 00 	lea    0x2b68(%rip),%rdi        # 4178 <_IO_stdin_used+0x178>
    1610:	e8 4b fc ff ff       	callq  1260 <puts@plt>
    1615:	e8 41 0c 00 00       	callq  225b <read_line>
    161a:	48 89 c7             	mov    %rax,%rdi
    161d:	e8 c7 03 00 00       	callq  19e9 <phase_5>
    1622:	48 89 df             	mov    %rbx,%rdi
    1625:	e8 7c 0d 00 00       	callq  23a6 <phase_defused>
    162a:	48 8d 3d 36 2a 00 00 	lea    0x2a36(%rip),%rdi        # 4067 <_IO_stdin_used+0x67>
    1631:	e8 2a fc ff ff       	callq  1260 <puts@plt>
    1636:	e8 20 0c 00 00       	callq  225b <read_line>
    163b:	48 89 c7             	mov    %rax,%rdi
    163e:	e8 f5 03 00 00       	callq  1a38 <phase_6>
    1643:	48 89 df             	mov    %rbx,%rdi
    1646:	e8 5b 0d 00 00       	callq  23a6 <phase_defused>
    164b:	48 89 df             	mov    %rbx,%rdi
    164e:	e8 cd fb ff ff       	callq  1220 <free@plt>
    1653:	e9 c5 fe ff ff       	jmpq   151d <main+0x54>

0000000000001658 <abracadabra>:
    1658:	f3 0f 1e fa          	endbr64 
    165c:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    1663:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    166a:	00 00 
    166c:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    1673:	00 
    1674:	31 c0                	xor    %eax,%eax
    1676:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    167b:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    1680:	48 83 ec 08          	sub    $0x8,%rsp
    1684:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    1689:	50                   	push   %rax
    168a:	48 8d 44 24 2c       	lea    0x2c(%rsp),%rax
    168f:	50                   	push   %rax
    1690:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    1695:	50                   	push   %rax
    1696:	4c 8d 4c 24 34       	lea    0x34(%rsp),%r9
    169b:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
    16a0:	48 8d 35 f5 2a 00 00 	lea    0x2af5(%rip),%rsi        # 419c <_IO_stdin_used+0x19c>
    16a7:	48 8d 3d 6a 6e 00 00 	lea    0x6e6a(%rip),%rdi        # 8518 <input_strings+0x78>
    16ae:	b8 00 00 00 00       	mov    $0x0,%eax
    16b3:	e8 78 fc ff ff       	callq  1330 <__isoc99_sscanf@plt>
    16b8:	48 83 c4 20          	add    $0x20,%rsp
    16bc:	83 f8 07             	cmp    $0x7,%eax
    16bf:	74 20                	je     16e1 <abracadabra+0x89>
    16c1:	b8 00 00 00 00       	mov    $0x0,%eax
    16c6:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
    16cd:	00 
    16ce:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    16d5:	00 00 
    16d7:	75 2b                	jne    1704 <abracadabra+0xac>
    16d9:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    16e0:	c3                   	retq   
    16e1:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    16e6:	48 8d 35 db 2a 00 00 	lea    0x2adb(%rip),%rsi        # 41c8 <_IO_stdin_used+0x1c8>
    16ed:	e8 5f 06 00 00       	callq  1d51 <strings_not_equal>
    16f2:	85 c0                	test   %eax,%eax
    16f4:	74 07                	je     16fd <abracadabra+0xa5>
    16f6:	b8 00 00 00 00       	mov    $0x0,%eax
    16fb:	eb c9                	jmp    16c6 <abracadabra+0x6e>
    16fd:	b8 01 00 00 00       	mov    $0x1,%eax
    1702:	eb c2                	jmp    16c6 <abracadabra+0x6e>
    1704:	e8 77 fb ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000001709 <alohomora>:
    1709:	f3 0f 1e fa          	endbr64 
    170d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    1714:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    171b:	00 00 
    171d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    1724:	00 
    1725:	31 c0                	xor    %eax,%eax
    1727:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    172c:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    1731:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    1736:	48 8d 35 6b 2a 00 00 	lea    0x2a6b(%rip),%rsi        # 41a8 <_IO_stdin_used+0x1a8>
    173d:	48 8d 3d c4 6e 00 00 	lea    0x6ec4(%rip),%rdi        # 8608 <input_strings+0x168>
    1744:	e8 e7 fb ff ff       	callq  1330 <__isoc99_sscanf@plt>
    1749:	83 f8 03             	cmp    $0x3,%eax
    174c:	74 20                	je     176e <alohomora+0x65>
    174e:	b8 00 00 00 00       	mov    $0x0,%eax
    1753:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    175a:	00 
    175b:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    1762:	00 00 
    1764:	75 42                	jne    17a8 <alohomora+0x9f>
    1766:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    176d:	c3                   	retq   
    176e:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    1773:	0f b6 02             	movzbl (%rdx),%eax
    1776:	84 c0                	test   %al,%al
    1778:	74 0b                	je     1785 <alohomora+0x7c>
    177a:	83 c0 02             	add    $0x2,%eax
    177d:	88 02                	mov    %al,(%rdx)
    177f:	48 83 c2 01          	add    $0x1,%rdx
    1783:	eb ee                	jmp    1773 <alohomora+0x6a>
    1785:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    178a:	48 8d 35 57 2a 00 00 	lea    0x2a57(%rip),%rsi        # 41e8 <_IO_stdin_used+0x1e8>
    1791:	e8 bb 05 00 00       	callq  1d51 <strings_not_equal>
    1796:	85 c0                	test   %eax,%eax
    1798:	74 07                	je     17a1 <alohomora+0x98>
    179a:	b8 00 00 00 00       	mov    $0x0,%eax
    179f:	eb b2                	jmp    1753 <alohomora+0x4a>
    17a1:	b8 01 00 00 00       	mov    $0x1,%eax
    17a6:	eb ab                	jmp    1753 <alohomora+0x4a>
    17a8:	e8 d3 fa ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000017ad <phase_1>:
    17ad:	f3 0f 1e fa          	endbr64 
    17b1:	48 83 ec 08          	sub    $0x8,%rsp
    17b5:	48 8d 35 54 2a 00 00 	lea    0x2a54(%rip),%rsi        # 4210 <_IO_stdin_used+0x210>
    17bc:	e8 90 05 00 00       	callq  1d51 <strings_not_equal>
    17c1:	85 c0                	test   %eax,%eax
    17c3:	75 05                	jne    17ca <phase_1+0x1d>
    17c5:	48 83 c4 08          	add    $0x8,%rsp
    17c9:	c3                   	retq   
    17ca:	e8 59 09 00 00       	callq  2128 <explode_bomb>
    17cf:	eb f4                	jmp    17c5 <phase_1+0x18>

00000000000017d1 <phase_2>:
    17d1:	f3 0f 1e fa          	endbr64 
    17d5:	53                   	push   %rbx
    17d6:	48 83 ec 20          	sub    $0x20,%rsp
    17da:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17e1:	00 00 
    17e3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    17e8:	31 c0                	xor    %eax,%eax
    17ea:	48 89 e6             	mov    %rsp,%rsi
    17ed:	e8 24 0a 00 00       	callq  2216 <read_six_numbers>
    17f2:	83 3c 24 00          	cmpl   $0x0,(%rsp)
    17f6:	75 07                	jne    17ff <phase_2+0x2e>//如果*%rsp（栈顶地址）!=0，炸弹爆炸=>栈顶得是0
    17f8:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
    17fd:	74 05                	je     1804 <phase_2+0x33>//如果*(%rsp+4)==1跳转=>栈+4得是1
    17ff:	e8 24 09 00 00       	callq  2128 <explode_bomb>
    1804:	bb 02 00 00 00       	mov    $0x2,%ebx
    1809:	eb 08                	jmp    1813 <phase_2+0x42>
    180b:	e8 18 09 00 00       	callq  2128 <explode_bomb>
    1810:	83 c3 01             	add    $0x1,%ebx
    1813:	83 fb 05             	cmp    $0x5,%ebx
    1816:	7f 1b                	jg     1833 <phase_2+0x62>
    1818:	48 63 d3             	movslq %ebx,%rdx
    181b:	8d 4b fe             	lea    -0x2(%rbx),%ecx
    181e:	48 63 c9             	movslq %ecx,%rcx
    1821:	8d 43 ff             	lea    -0x1(%rbx),%eax
    1824:	48 98                	cltq   //%eax符号扩展到%rax
    1826:	8b 04 84             	mov    (%rsp,%rax,4),%eax
    1829:	03 04 8c             	add    (%rsp,%rcx,4),%eax//%eax=*(%rsp+4%rax)+*(%rsp+4(%rbx-2))
    182c:	39 04 94             	cmp    %eax,(%rsp,%rdx,4)//*(%rsp+4%rdx)==*(%rsp+4(%rbx-1))+*(%rsp+4(%rbx-2))斐波那契
    182f:	74 df                	je     1810 <phase_2+0x3f>
    1831:	eb d8                	jmp    180b <phase_2+0x3a>
    1833:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    1838:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    183f:	00 00 
    1841:	75 06                	jne    1849 <phase_2+0x78>
    1843:	48 83 c4 20          	add    $0x20,%rsp
    1847:	5b                   	pop    %rbx
    1848:	c3                   	retq   
    1849:	e8 32 fa ff ff       	callq  1280 <__stack_chk_fail@plt>

000000000000184e <phase_3>:
    184e:	f3 0f 1e fa          	endbr64 
    1852:	48 83 ec 18          	sub    $0x18,%rsp
    1856:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    185d:	00 00 
    185f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1864:	31 c0                	xor    %eax,%eax //eax=0
    1866:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    186b:	48 89 e2             	mov    %rsp,%rdx
    186e:	48 8d 35 a3 2e 00 00 	lea    0x2ea3(%rip),%rsi        # 4718 <transition_table+0x338>
    1875:	e8 b6 fa ff ff       	callq  1330 <__isoc99_sscanf@plt>
    187a:	83 f8 01             	cmp    $0x1,%eax
    187d:	7e 1f                	jle    189e <phase_3+0x50>// %eax<=1 -> boom
    187f:	8b 04 24             	mov    (%rsp),%eax
    1882:	83 f8 07             	cmp    $0x7,%eax
    1885:	0f 87 99 00 00 00    	ja     1924 <phase_3+0xd6>// *%rsp>7 -> boom
    188b:	89 c0                	mov    %eax,%eax
    188d:	48 8d 15 ec 2a 00 00 	lea    0x2aec(%rip),%rdx        # 4380 <_IO_stdin_used+0x380>
    1894:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    1898:	48 01 d0             	add    %rdx,%rax// rax=4rax+2rdx
    189b:	3e ff e0             	notrack jmpq *%rax
    189e:	e8 85 08 00 00       	callq  2128 <explode_bomb>
    18a3:	eb da                	jmp    187f <phase_3+0x31>
    18a5:	b8 00 00 00 00       	mov    $0x0,%eax
    18aa:	2d 9c 02 00 00       	sub    $0x29c,%eax
    18af:	05 7e 01 00 00       	add    $0x17e,%eax
    18b4:	2d 40 03 00 00       	sub    $0x340,%eax
    18b9:	05 40 03 00 00       	add    $0x340,%eax
    18be:	2d 40 03 00 00       	sub    $0x340,%eax
    18c3:	05 40 03 00 00       	add    $0x340,%eax
    18c8:	2d 40 03 00 00       	sub    $0x340,%eax
    18cd:	83 3c 24 05          	cmpl   $0x5,(%rsp) //rax=0xfffffba2
    18d1:	7f 06                	jg     18d9 <phase_3+0x8b>
    18d3:	39 44 24 04          	cmp    %eax,0x4(%rsp)//eax= 0xfffffba2(-1118)
    18d7:	74 05                	je     18de <phase_3+0x90>
    18d9:	e8 4a 08 00 00       	callq  2128 <explode_bomb>
    18de:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    18e3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    18ea:	00 00 
    18ec:	75 42                	jne    1930 <phase_3+0xe2>
    18ee:	48 83 c4 18          	add    $0x18,%rsp
    18f2:	c3                   	retq   
    18f3:	b8 60 03 00 00       	mov    $0x360,%eax
    18f8:	eb b0                	jmp    18aa <phase_3+0x5c>
    18fa:	b8 00 00 00 00       	mov    $0x0,%eax
    18ff:	eb ae                	jmp    18af <phase_3+0x61>
    1901:	b8 00 00 00 00       	mov    $0x0,%eax
    1906:	eb ac                	jmp    18b4 <phase_3+0x66>
    1908:	b8 00 00 00 00       	mov    $0x0,%eax
    190d:	eb aa                	jmp    18b9 <phase_3+0x6b>
    190f:	b8 00 00 00 00       	mov    $0x0,%eax
    1914:	eb a8                	jmp    18be <phase_3+0x70>
    1916:	b8 00 00 00 00       	mov    $0x0,%eax
    191b:	eb a6                	jmp    18c3 <phase_3+0x75>
    191d:	b8 00 00 00 00       	mov    $0x0,%eax
    1922:	eb a4                	jmp    18c8 <phase_3+0x7a>
    1924:	e8 ff 07 00 00       	callq  2128 <explode_bomb>
    1929:	b8 00 00 00 00       	mov    $0x0,%eax
    192e:	eb 9d                	jmp    18cd <phase_3+0x7f>
    1930:	e8 4b f9 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000001935 <func4>:
    1935:	f3 0f 1e fa          	endbr64 
    1939:	85 ff                	test   %edi,%edi
    193b:	7e 2b                	jle    1968 <func4+0x33>//edi等于0跳转
    193d:	41 54                	push   %r12
    193f:	55                   	push   %rbp
    1940:	53                   	push   %rbx
    1941:	89 fd                	mov    %edi,%ebp
    1943:	89 f3                	mov    %esi,%ebx//第二个参数
    1945:	83 ff 01             	cmp    $0x1,%edi
    1948:	74 24                	je     196e <func4+0x39>
    194a:	8d 7f ff             	lea    -0x1(%rdi),%edi
    194d:	e8 e3 ff ff ff       	callq  1935 <func4>
    1952:	44 8d 24 18          	lea    (%rax,%rbx,1),%r12d
    1956:	8d 7d fe             	lea    -0x2(%rbp),%edi
    1959:	89 de                	mov    %ebx,%esi
    195b:	e8 d5 ff ff ff       	callq  1935 <func4>
    1960:	44 01 e0             	add    %r12d,%eax
    1963:	5b                   	pop    %rbx
    1964:	5d                   	pop    %rbp
    1965:	41 5c                	pop    %r12
    1967:	c3                   	retq   
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	c3                   	retq   
    196e:	89 f0                	mov    %esi,%eax
    1970:	eb f1                	jmp    1963 <func4+0x2e>

0000000000001972 <phase_4>:
    1972:	f3 0f 1e fa          	endbr64 
    1976:	48 83 ec 18          	sub    $0x18,%rsp
    197a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1981:	00 00 
    1983:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1988:	31 c0                	xor    %eax,%eax
    198a:	48 89 e1             	mov    %rsp,%rcx
    198d:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    1992:	48 8d 35 7f 2d 00 00 	lea    0x2d7f(%rip),%rsi        # 4718 <transition_table+0x338>
    1999:	e8 92 f9 ff ff       	callq  1330 <__isoc99_sscanf@plt>
    199e:	83 f8 02             	cmp    $0x2,%eax
    19a1:	75 0d                	jne    19b0 <phase_4+0x3e>
    19a3:	8b 04 24             	mov    (%rsp),%eax
    19a6:	83 f8 01             	cmp    $0x1,%eax//第二个数字要>1
    19a9:	7e 05                	jle    19b0 <phase_4+0x3e>
    19ab:	83 f8 04             	cmp    $0x4,%eax//第二个数字要<=4
    19ae:	7e 05                	jle    19b5 <phase_4+0x43>
    19b0:	e8 73 07 00 00       	callq  2128 <explode_bomb>
    19b5:	8b 34 24             	mov    (%rsp),%esi//第二个参数（第二个输入的值）
    19b8:	bf 06 00 00 00       	mov    $0x6,%edi//第一个参数
    19bd:	e8 73 ff ff ff       	callq  1935 <func4>
    19c2:	39 44 24 04          	cmp    %eax,0x4(%rsp)//第一个数字要等于eax
    19c6:	75 15                	jne    19dd <phase_4+0x6b>
    19c8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    19cd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    19d4:	00 00 
    19d6:	75 0c                	jne    19e4 <phase_4+0x72>
    19d8:	48 83 c4 18          	add    $0x18,%rsp
    19dc:	c3                   	retq   
    19dd:	e8 46 07 00 00       	callq  2128 <explode_bomb>
    19e2:	eb e4                	jmp    19c8 <phase_4+0x56>
    19e4:	e8 97 f8 ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000019e9 <phase_5>:
    19e9:	f3 0f 1e fa          	endbr64 
    19ed:	53                   	push   %rbx
    19ee:	48 89 fb             	mov    %rdi,%rbx
    19f1:	e8 43 03 00 00       	callq  1d39 <string_length>//rbx放的是字符串
    19f6:	83 f8 06             	cmp    $0x6,%eax//6个字符
    19f9:	75 28                	jne    1a23 <phase_5+0x3a>
    19fb:	b9 00 00 00 00       	mov    $0x0,%ecx
    1a00:	b8 00 00 00 00       	mov    $0x0,%eax
    1a05:	83 f8 05             	cmp    $0x5,%eax
    1a08:	7f 20                	jg     1a2a <phase_5+0x41>
    1a0a:	48 63 d0             	movslq %eax,%rdx
    1a0d:	0f b6 14 13          	movzbl (%rbx,%rdx,1),%edx
    1a11:	83 e2 0f             	and    $0xf,%edx
    1a14:	48 8d 35 85 29 00 00 	lea    0x2985(%rip),%rsi        # 43a0 <array.3498> //43a0 02000000 0a000000 06000000 01000000
    1a1b:	03 0c 96             	add    (%rsi,%rdx,4),%ecx                           //43b0 0c000000 10000000 09000000 03000000
    1a1e:	83 c0 01             	add    $0x1,%eax
    1a21:	eb e2                	jmp    1a05 <phase_5+0x1c>
    1a23:	e8 00 07 00 00       	callq  2128 <explode_bomb>
    1a28:	eb d1                	jmp    19fb <phase_5+0x12>
    1a2a:	83 f9 48             	cmp    $0x48,%ecx
    1a2d:	75 02                	jne    1a31 <phase_5+0x48>
    1a2f:	5b                   	pop    %rbx
    1a30:	c3                   	retq   
    1a31:	e8 f2 06 00 00       	callq  2128 <explode_bomb>
    1a36:	eb f7                	jmp    1a2f <phase_5+0x46>

0000000000001a38 <phase_6>:
    1a38:	f3 0f 1e fa          	endbr64 
    1a3c:	41 54                	push   %r12
    1a3e:	55                   	push   %rbp
    1a3f:	53                   	push   %rbx
    1a40:	48 83 ec 60          	sub    $0x60,%rsp
    1a44:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1a4b:	00 00 
    1a4d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    1a52:	31 c0                	xor    %eax,%eax
    1a54:	48 89 e6             	mov    %rsp,%rsi
    1a57:	e8 ba 07 00 00       	callq  2216 <read_six_numbers>//第一个数字放在栈顶，其他依次隔四个字节放在栈内部
    1a5c:	bd 00 00 00 00       	mov    $0x0,%ebp
    1a61:	eb 27                	jmp    1a8a <phase_6+0x52>
    1a63:	e8 c0 06 00 00       	callq  2128 <explode_bomb>
    1a68:	eb 33                	jmp    1a9d <phase_6+0x65>
    1a6a:	83 c3 01             	add    $0x1,%ebx
    1a6d:	83 fb 05             	cmp    $0x5,%ebx
    1a70:	7f 15                	jg     1a87 <phase_6+0x4f>
    1a72:	48 63 c5             	movslq %ebp,%rax
    1a75:	48 63 d3             	movslq %ebx,%rdx
    1a78:	8b 3c 94             	mov    (%rsp,%rdx,4),%edi
    1a7b:	39 3c 84             	cmp    %edi,(%rsp,%rax,4)
    1a7e:	75 ea                	jne    1a6a <phase_6+0x32>//后输入的数字需要不等于前输入的数
    1a80:	e8 a3 06 00 00       	callq  2128 <explode_bomb>
    1a85:	eb e3                	jmp    1a6a <phase_6+0x32>
    1a87:	44 89 e5             	mov    %r12d,%ebp
    1a8a:	83 fd 05             	cmp    $0x5,%ebp//ebp为计数器，大于5时跳转;
    1a8d:	7f 17                	jg     1aa6 <phase_6+0x6e>
    1a8f:	48 63 c5             	movslq %ebp,%rax
    1a92:	8b 04 84             	mov    (%rsp,%rax,4),%eax//分别移入6个数字
    1a95:	83 e8 01             	sub    $0x1,%eax
    1a98:	83 f8 05             	cmp    $0x5,%eax//每个数字减一之后与5比较,大于5便直接炸掉（即六个输入的数字都得<=6）
    1a9b:	77 c6                	ja     1a63 <phase_6+0x2b>
    1a9d:	44 8d 65 01          	lea    0x1(%rbp),%r12d
    1aa1:	44 89 e3             	mov    %r12d,%ebx//ebx=ebp+1即计数器+1
    1aa4:	eb c7                	jmp    1a6d <phase_6+0x35>
    1aa6:	be 00 00 00 00       	mov    $0x0,%esi
    1aab:	eb 08                	jmp    1ab5 <phase_6+0x7d>
    1aad:	48 89 54 cc 20       	mov    %rdx,0x20(%rsp,%rcx,8)//rdx是<node1>的地址
    1ab2:	83 c6 01             	add    $0x1,%esi
    1ab5:	83 fe 05             	cmp    $0x5,%esi
    1ab8:	7f 1d                	jg     1ad7 <phase_6+0x9f>
    1aba:	b8 01 00 00 00       	mov    $0x1,%eax
    1abf:	48 8d 15 8a 65 00 00 	lea    0x658a(%rip),%rdx        # 8050 <node1>
    1ac6:	48 63 ce             	movslq %esi,%rcx
    1ac9:	39 04 8c             	cmp    %eax,(%rsp,%rcx,4)//eax与读入的数字进行比较，读入数字小于或等于1便跳转
    1acc:	7e df                	jle    1aad <phase_6+0x75>
    1ace:	48 8b 52 08          	mov    0x8(%rdx),%rdx//rdx地址+8
    1ad2:	83 c0 01             	add    $0x1,%eax
    1ad5:	eb ef                	jmp    1ac6 <phase_6+0x8e>
    1ad7:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    1adc:	48 89 d9             	mov    %rbx,%rcx//链表起始地址放入rcx
        1adf:	b8 01 00 00 00       	mov    $0x1,%eax
        1ae4:	eb 12                	jmp    1af8 <phase_6+0xc0>
        1ae6:	48 63 d0             	movslq %eax,%rdx
        1ae9:	48 8b 54 d4 20       	mov    0x20(%rsp,%rdx,8),%rdx
        1aee:	48 89 51 08          	mov    %rdx,0x8(%rcx)
        1af2:	83 c0 01             	add    $0x1,%eax
        1af5:	48 89 d1             	mov    %rdx,%rcx
        1af8:	83 f8 05             	cmp    $0x5,%eax
        1afb:	7e e9                	jle    1ae6 <phase_6+0xae>
    1afd:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
    1b04:	00 
    1b05:	bd 00 00 00 00       	mov    $0x0,%ebp
    1b0a:	eb 07                	jmp    1b13 <phase_6+0xdb>
    1b0c:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
    1b10:	83 c5 01             	add    $0x1,%ebp
    1b13:	83 fd 04             	cmp    $0x4,%ebp
    1b16:	7f 11                	jg     1b29 <phase_6+0xf1>
    1b18:	48 8b 43 08          	mov    0x8(%rbx),%rax
    1b1c:	8b 00                	mov    (%rax),%eax
    1b1e:	39 03                	cmp    %eax,(%rbx)
    1b20:	7e ea                	jle    1b0c <phase_6+0xd4>
    1b22:	e8 01 06 00 00       	callq  2128 <explode_bomb>
    1b27:	eb e3                	jmp    1b0c <phase_6+0xd4>
    1b29:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    1b2e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1b35:	00 00 
    1b37:	75 09                	jne    1b42 <phase_6+0x10a>
    1b39:	48 83 c4 60          	add    $0x60,%rsp
    1b3d:	5b                   	pop    %rbx
    1b3e:	5d                   	pop    %rbp
    1b3f:	41 5c                	pop    %r12
    1b41:	c3                   	retq   
    1b42:	e8 39 f7 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000001b47 <emulate_fsm>:
    1b47:	f3 0f 1e fa          	endbr64 
    1b4b:	55                   	push   %rbp
    1b4c:	53                   	push   %rbx
    1b4d:	48 83 ec 08          	sub    $0x8,%rsp
    1b51:	89 fd                	mov    %edi,%ebp
    1b53:	48 89 f3             	mov    %rsi,%rbx
    1b56:	eb 27                	jmp    1b7f <emulate_fsm+0x38>
    1b58:	0f be 03             	movsbl (%rbx),%eax
    1b5b:	83 e8 30             	sub    $0x30,%eax
    1b5e:	48 63 ed             	movslq %ebp,%rbp
    1b61:	48 98                	cltq   
    1b63:	48 8d 3c c5 00 00 00 	lea    0x0(,%rax,8),%rdi
    1b6a:	00 
    1b6b:	48 29 c7             	sub    %rax,%rdi
    1b6e:	48 01 ef             	add    %rbp,%rdi
    1b71:	48 8d 05 68 28 00 00 	lea    0x2868(%rip),%rax        # 43e0 <transition_table>
    1b78:	8b 2c b8             	mov    (%rax,%rdi,4),%ebp
    1b7b:	48 83 c3 01          	add    $0x1,%rbx
    1b7f:	0f b6 03             	movzbl (%rbx),%eax
    1b82:	84 c0                	test   %al,%al
    1b84:	74 0e                	je     1b94 <emulate_fsm+0x4d>
    1b86:	83 e8 30             	sub    $0x30,%eax
    1b89:	3c 01                	cmp    $0x1,%al
    1b8b:	76 cb                	jbe    1b58 <emulate_fsm+0x11>
    1b8d:	e8 96 05 00 00       	callq  2128 <explode_bomb>
    1b92:	eb c4                	jmp    1b58 <emulate_fsm+0x11>
    1b94:	89 e8                	mov    %ebp,%eax
    1b96:	48 83 c4 08          	add    $0x8,%rsp
    1b9a:	5b                   	pop    %rbx
    1b9b:	5d                   	pop    %rbp
    1b9c:	c3                   	retq   

0000000000001b9d <check_synchronizing_sequence>:
    1b9d:	f3 0f 1e fa          	endbr64 
    1ba1:	41 54                	push   %r12
    1ba3:	55                   	push   %rbp
    1ba4:	53                   	push   %rbx
    1ba5:	48 89 fd             	mov    %rdi,%rbp
    1ba8:	48 89 fe             	mov    %rdi,%rsi
    1bab:	bf 00 00 00 00       	mov    $0x0,%edi
    1bb0:	e8 92 ff ff ff       	callq  1b47 <emulate_fsm>
    1bb5:	41 89 c4             	mov    %eax,%r12d
    1bb8:	bb 01 00 00 00       	mov    $0x1,%ebx
    1bbd:	83 fb 06             	cmp    $0x6,%ebx
    1bc0:	7f 14                	jg     1bd6 <check_synchronizing_sequence+0x39>
    1bc2:	48 89 ee             	mov    %rbp,%rsi
    1bc5:	89 df                	mov    %ebx,%edi
    1bc7:	e8 7b ff ff ff       	callq  1b47 <emulate_fsm>
    1bcc:	44 39 e0             	cmp    %r12d,%eax
    1bcf:	75 0f                	jne    1be0 <check_synchronizing_sequence+0x43>
    1bd1:	83 c3 01             	add    $0x1,%ebx
    1bd4:	eb e7                	jmp    1bbd <check_synchronizing_sequence+0x20>
    1bd6:	b8 00 00 00 00       	mov    $0x0,%eax
    1bdb:	5b                   	pop    %rbx
    1bdc:	5d                   	pop    %rbp
    1bdd:	41 5c                	pop    %r12
    1bdf:	c3                   	retq   
    1be0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1be5:	eb f4                	jmp    1bdb <check_synchronizing_sequence+0x3e>

0000000000001be7 <secret_phase>:
    1be7:	f3 0f 1e fa          	endbr64 
    1beb:	55                   	push   %rbp
    1bec:	53                   	push   %rbx
    1bed:	48 83 ec 18          	sub    $0x18,%rsp
    1bf1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1bf8:	00 00 
    1bfa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1bff:	31 c0                	xor    %eax,%eax
    1c01:	e8 55 06 00 00       	callq  225b <read_line>
    1c06:	48 89 c5             	mov    %rax,%rbp
    1c09:	bb 00 00 00 00       	mov    $0x0,%ebx
    1c0e:	eb 08                	jmp    1c18 <secret_phase+0x31>
    1c10:	e8 13 05 00 00       	callq  2128 <explode_bomb>
    1c15:	83 c3 01             	add    $0x1,%ebx
    1c18:	48 63 c3             	movslq %ebx,%rax
    1c1b:	80 7c 05 00 00       	cmpb   $0x0,0x0(%rbp,%rax,1)
    1c20:	74 07                	je     1c29 <secret_phase+0x42>
    1c22:	83 fb 18             	cmp    $0x18,%ebx
    1c25:	7e ee                	jle    1c15 <secret_phase+0x2e>
    1c27:	eb e7                	jmp    1c10 <secret_phase+0x29>
    1c29:	48 89 ef             	mov    %rbp,%rdi
    1c2c:	e8 6c ff ff ff       	callq  1b9d <check_synchronizing_sequence>
    1c31:	85 c0                	test   %eax,%eax
    1c33:	75 69                	jne    1c9e <secret_phase+0xb7>
    1c35:	48 8d 3d 2c 26 00 00 	lea    0x262c(%rip),%rdi        # 4268 <_IO_stdin_used+0x268>
    1c3c:	e8 1f f6 ff ff       	callq  1260 <puts@plt>
    1c41:	48 8d 3d 58 26 00 00 	lea    0x2658(%rip),%rdi        # 42a0 <_IO_stdin_used+0x2a0>
    1c48:	e8 13 f6 ff ff       	callq  1260 <puts@plt>
    1c4d:	48 8d 3d 8c 26 00 00 	lea    0x268c(%rip),%rdi        # 42e0 <_IO_stdin_used+0x2e0>
    1c54:	e8 07 f6 ff ff       	callq  1260 <puts@plt>
    1c59:	48 8d 3d b8 26 00 00 	lea    0x26b8(%rip),%rdi        # 4318 <_IO_stdin_used+0x318>
    1c60:	e8 fb f5 ff ff       	callq  1260 <puts@plt>
    1c65:	48 8d 3d ec 26 00 00 	lea    0x26ec(%rip),%rdi        # 4358 <_IO_stdin_used+0x358>
    1c6c:	e8 ef f5 ff ff       	callq  1260 <puts@plt>
    1c71:	48 8d 3d 39 25 00 00 	lea    0x2539(%rip),%rdi        # 41b1 <_IO_stdin_used+0x1b1>
    1c78:	e8 e3 f5 ff ff       	callq  1260 <puts@plt>
    1c7d:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    1c82:	e8 1f 07 00 00       	callq  23a6 <phase_defused>
    1c87:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1c8c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1c93:	00 00 
    1c95:	75 0e                	jne    1ca5 <secret_phase+0xbe>
    1c97:	48 83 c4 18          	add    $0x18,%rsp
    1c9b:	5b                   	pop    %rbx
    1c9c:	5d                   	pop    %rbp
    1c9d:	c3                   	retq   
    1c9e:	e8 85 04 00 00       	callq  2128 <explode_bomb>
    1ca3:	eb 90                	jmp    1c35 <secret_phase+0x4e>
    1ca5:	e8 d6 f5 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000001caa <sig_handler>:
    1caa:	f3 0f 1e fa          	endbr64 
    1cae:	50                   	push   %rax
    1caf:	58                   	pop    %rax
    1cb0:	48 83 ec 08          	sub    $0x8,%rsp
    1cb4:	48 8d 3d 5d 27 00 00 	lea    0x275d(%rip),%rdi        # 4418 <transition_table+0x38>
    1cbb:	e8 a0 f5 ff ff       	callq  1260 <puts@plt>
    1cc0:	bf 03 00 00 00       	mov    $0x3,%edi
    1cc5:	e8 d6 f6 ff ff       	callq  13a0 <sleep@plt>
    1cca:	48 8d 35 c0 29 00 00 	lea    0x29c0(%rip),%rsi        # 4691 <transition_table+0x2b1>
    1cd1:	bf 01 00 00 00       	mov    $0x1,%edi
    1cd6:	b8 00 00 00 00       	mov    $0x0,%eax
    1cdb:	e8 60 f6 ff ff       	callq  1340 <__printf_chk@plt>
    1ce0:	48 8b 3d 79 67 00 00 	mov    0x6779(%rip),%rdi        # 8460 <stdout@@GLIBC_2.2.5>
    1ce7:	e8 34 f6 ff ff       	callq  1320 <fflush@plt>
    1cec:	bf 01 00 00 00       	mov    $0x1,%edi
    1cf1:	e8 aa f6 ff ff       	callq  13a0 <sleep@plt>
    1cf6:	48 8d 3d 9c 29 00 00 	lea    0x299c(%rip),%rdi        # 4699 <transition_table+0x2b9>
    1cfd:	e8 5e f5 ff ff       	callq  1260 <puts@plt>
    1d02:	bf 10 00 00 00       	mov    $0x10,%edi
    1d07:	e8 64 f6 ff ff       	callq  1370 <exit@plt>

0000000000001d0c <invalid_phase>:
    1d0c:	f3 0f 1e fa          	endbr64 
    1d10:	50                   	push   %rax
    1d11:	58                   	pop    %rax
    1d12:	48 83 ec 08          	sub    $0x8,%rsp
    1d16:	48 89 fa             	mov    %rdi,%rdx
    1d19:	48 8d 35 81 29 00 00 	lea    0x2981(%rip),%rsi        # 46a1 <transition_table+0x2c1>
    1d20:	bf 01 00 00 00       	mov    $0x1,%edi
    1d25:	b8 00 00 00 00       	mov    $0x0,%eax
    1d2a:	e8 11 f6 ff ff       	callq  1340 <__printf_chk@plt>
    1d2f:	bf 08 00 00 00       	mov    $0x8,%edi
    1d34:	e8 37 f6 ff ff       	callq  1370 <exit@plt>

0000000000001d39 <string_length>:
    1d39:	f3 0f 1e fa          	endbr64 
    1d3d:	b8 00 00 00 00       	mov    $0x0,%eax
    1d42:	80 3f 00             	cmpb   $0x0,(%rdi)//如果%rdi对应位置字符串为0，直接返回%eax的值，即0
    1d45:	74 09                	je     1d50 <string_length+0x17>
    1d47:	48 83 c7 01          	add    $0x1,%rdi//否则一起加1，直到到达字符串末尾
    1d4b:	83 c0 01             	add    $0x1,%eax
    1d4e:	eb f2                	jmp    1d42 <string_length+0x9>
    1d50:	c3                   	retq   

0000000000001d51 <strings_not_equal>:
    1d51:	f3 0f 1e fa          	endbr64 
    1d55:	41 54                	push   %r12
    1d57:	55                   	push   %rbp
    1d58:	53                   	push   %rbx
    1d59:	48 89 fb             	mov    %rdi,%rbx
    1d5c:	48 89 f5             	mov    %rsi,%rbp
    1d5f:	e8 d5 ff ff ff       	callq  1d39 <string_length>
    1d64:	41 89 c4             	mov    %eax,%r12d//把(%rdi)长度存入%r12d
    1d67:	48 89 ef             	mov    %rbp,%rdi
    1d6a:	e8 ca ff ff ff       	callq  1d39 <string_length>
    1d6f:	41 39 c4             	cmp    %eax,%r12d//把(%rsi)长度与(%rdi)相比较，如果不相等跳至strings_not_equal
    1d72:	75 1d                	jne    1d91 <strings_not_equal+0x40>
    1d74:	0f b6 03             	movzbl (%rbx),%eax
    1d77:	84 c0                	test   %al,%al//比较(%rsi)与(%rdi)
    1d79:	74 0f                	je     1d8a <strings_not_equal+0x39>
    1d7b:	38 45 00             	cmp    %al,0x0(%rbp)
    1d7e:	75 1b                	jne    1d9b <strings_not_equal+0x4a>
    1d80:	48 83 c3 01          	add    $0x1,%rbx
    1d84:	48 83 c5 01          	add    $0x1,%rbp
    1d88:	eb ea                	jmp    1d74 <strings_not_equal+0x23>
    1d8a:	b8 00 00 00 00       	mov    $0x0,%eax
    1d8f:	eb 05                	jmp    1d96 <strings_not_equal+0x45>
    1d91:	b8 01 00 00 00       	mov    $0x1,%eax
    1d96:	5b                   	pop    %rbx
    1d97:	5d                   	pop    %rbp
    1d98:	41 5c                	pop    %r12
    1d9a:	c3                   	retq   
    1d9b:	b8 01 00 00 00       	mov    $0x1,%eax
    1da0:	eb f4                	jmp    1d96 <strings_not_equal+0x45>

0000000000001da2 <initialize_bomb>:
    1da2:	f3 0f 1e fa          	endbr64 
    1da6:	55                   	push   %rbp
    1da7:	53                   	push   %rbx
    1da8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1daf:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1db4:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1dbb:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1dc0:	48 83 ec 58          	sub    $0x58,%rsp
    1dc4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1dcb:	00 00 
    1dcd:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
    1dd4:	00 
    1dd5:	31 c0                	xor    %eax,%eax
    1dd7:	48 8d 35 cc fe ff ff 	lea    -0x134(%rip),%rsi        # 1caa <sig_handler>
    1dde:	bf 02 00 00 00       	mov    $0x2,%edi
    1de3:	e8 e8 f4 ff ff       	callq  12d0 <signal@plt>
    1de8:	48 89 e7             	mov    %rsp,%rdi
    1deb:	be 40 00 00 00       	mov    $0x40,%esi
    1df0:	e8 6b f5 ff ff       	callq  1360 <gethostname@plt>
    1df5:	85 c0                	test   %eax,%eax
    1df7:	75 06                	jne    1dff <initialize_bomb+0x5d>
    1df9:	89 c5                	mov    %eax,%ebp
    1dfb:	89 c3                	mov    %eax,%ebx
    1dfd:	eb 19                	jmp    1e18 <initialize_bomb+0x76>
    1dff:	48 8d 3d 4a 26 00 00 	lea    0x264a(%rip),%rdi        # 4450 <transition_table+0x70>
    1e06:	e8 55 f4 ff ff       	callq  1260 <puts@plt>
    1e0b:	bf 08 00 00 00       	mov    $0x8,%edi
    1e10:	e8 5b f5 ff ff       	callq  1370 <exit@plt>
    1e15:	83 c3 01             	add    $0x1,%ebx
    1e18:	48 63 c3             	movslq %ebx,%rax
    1e1b:	48 8d 15 7e 62 00 00 	lea    0x627e(%rip),%rdx        # 80a0 <host_table>
    1e22:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    1e26:	48 85 ff             	test   %rdi,%rdi
    1e29:	74 11                	je     1e3c <initialize_bomb+0x9a>
    1e2b:	48 89 e6             	mov    %rsp,%rsi
    1e2e:	e8 fd f3 ff ff       	callq  1230 <strcasecmp@plt>
    1e33:	85 c0                	test   %eax,%eax
    1e35:	75 de                	jne    1e15 <initialize_bomb+0x73>
    1e37:	bd 01 00 00 00       	mov    $0x1,%ebp
    1e3c:	85 ed                	test   %ebp,%ebp
    1e3e:	74 3b                	je     1e7b <initialize_bomb+0xd9>
    1e40:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    1e45:	e8 60 11 00 00       	callq  2faa <init_driver>
    1e4a:	85 c0                	test   %eax,%eax
    1e4c:	78 43                	js     1e91 <initialize_bomb+0xef>
    1e4e:	bf 04 00 00 00       	mov    $0x4,%edi
    1e53:	e8 b8 f4 ff ff       	callq  1310 <malloc@plt>
    1e58:	c7 00 11 fa 22 20    	movl   $0x2022fa11,(%rax)
    1e5e:	48 8b 8c 24 48 20 00 	mov    0x2048(%rsp),%rcx
    1e65:	00 
    1e66:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1e6d:	00 00 
    1e6f:	75 45                	jne    1eb6 <initialize_bomb+0x114>
    1e71:	48 81 c4 58 20 00 00 	add    $0x2058,%rsp
    1e78:	5b                   	pop    %rbx
    1e79:	5d                   	pop    %rbp
    1e7a:	c3                   	retq   
    1e7b:	48 8d 3d 06 26 00 00 	lea    0x2606(%rip),%rdi        # 4488 <transition_table+0xa8>
    1e82:	e8 d9 f3 ff ff       	callq  1260 <puts@plt>
    1e87:	bf 08 00 00 00       	mov    $0x8,%edi
    1e8c:	e8 df f4 ff ff       	callq  1370 <exit@plt>
    1e91:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    1e96:	48 8d 35 15 28 00 00 	lea    0x2815(%rip),%rsi        # 46b2 <transition_table+0x2d2>
    1e9d:	bf 01 00 00 00       	mov    $0x1,%edi
    1ea2:	b8 00 00 00 00       	mov    $0x0,%eax
    1ea7:	e8 94 f4 ff ff       	callq  1340 <__printf_chk@plt>
    1eac:	bf 08 00 00 00       	mov    $0x8,%edi
    1eb1:	e8 ba f4 ff ff       	callq  1370 <exit@plt>
    1eb6:	e8 c5 f3 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000001ebb <initialize_bomb_solve>:
    1ebb:	f3 0f 1e fa          	endbr64 
    1ebf:	c3                   	retq   

0000000000001ec0 <blank_line>:
    1ec0:	f3 0f 1e fa          	endbr64 
    1ec4:	55                   	push   %rbp
    1ec5:	53                   	push   %rbx
    1ec6:	48 83 ec 08          	sub    $0x8,%rsp
    1eca:	48 89 fd             	mov    %rdi,%rbp
    1ecd:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
    1ed1:	84 db                	test   %bl,%bl
    1ed3:	74 1e                	je     1ef3 <blank_line+0x33>
    1ed5:	e8 d6 f4 ff ff       	callq  13b0 <__ctype_b_loc@plt>
    1eda:	48 8b 00             	mov    (%rax),%rax
    1edd:	48 83 c5 01          	add    $0x1,%rbp
    1ee1:	48 0f be db          	movsbq %bl,%rbx
    1ee5:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
    1eea:	75 e1                	jne    1ecd <blank_line+0xd>
    1eec:	b8 00 00 00 00       	mov    $0x0,%eax
    1ef1:	eb 05                	jmp    1ef8 <blank_line+0x38>
    1ef3:	b8 01 00 00 00       	mov    $0x1,%eax
    1ef8:	48 83 c4 08          	add    $0x8,%rsp
    1efc:	5b                   	pop    %rbx
    1efd:	5d                   	pop    %rbp
    1efe:	c3                   	retq   

0000000000001eff <skip>:
    1eff:	f3 0f 1e fa          	endbr64 
    1f03:	53                   	push   %rbx
    1f04:	48 63 15 81 65 00 00 	movslq 0x6581(%rip),%rdx        # 848c <num_input_strings>
    1f0b:	48 89 d0             	mov    %rdx,%rax
    1f0e:	48 c1 e0 04          	shl    $0x4,%rax
    1f12:	48 29 d0             	sub    %rdx,%rax
    1f15:	48 8d 15 84 65 00 00 	lea    0x6584(%rip),%rdx        # 84a0 <input_strings>
    1f1c:	48 8d 3c c2          	lea    (%rdx,%rax,8),%rdi
    1f20:	48 8b 15 69 65 00 00 	mov    0x6569(%rip),%rdx        # 8490 <infile>
    1f27:	be 78 00 00 00       	mov    $0x78,%esi
    1f2c:	e8 8f f3 ff ff       	callq  12c0 <fgets@plt>
    1f31:	48 89 c3             	mov    %rax,%rbx
    1f34:	48 85 c0             	test   %rax,%rax
    1f37:	74 0c                	je     1f45 <skip+0x46>
    1f39:	48 89 c7             	mov    %rax,%rdi
    1f3c:	e8 7f ff ff ff       	callq  1ec0 <blank_line>
    1f41:	85 c0                	test   %eax,%eax
    1f43:	75 bf                	jne    1f04 <skip+0x5>
    1f45:	48 89 d8             	mov    %rbx,%rax
    1f48:	5b                   	pop    %rbx
    1f49:	c3                   	retq   

0000000000001f4a <send_msg>:
    1f4a:	f3 0f 1e fa          	endbr64 
    1f4e:	41 55                	push   %r13
    1f50:	41 54                	push   %r12
    1f52:	55                   	push   %rbp
    1f53:	53                   	push   %rbx
    1f54:	4c 8d 9c 24 00 c0 ff 	lea    -0x4000(%rsp),%r11
    1f5b:	ff 
    1f5c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1f63:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    1f68:	4c 39 dc             	cmp    %r11,%rsp
    1f6b:	75 ef                	jne    1f5c <send_msg+0x12>
    1f6d:	48 83 ec 58          	sub    $0x58,%rsp
    1f71:	89 fa                	mov    %edi,%edx
    1f73:	49 89 f4             	mov    %rsi,%r12
    1f76:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1f7d:	00 00 
    1f7f:	48 89 84 24 48 40 00 	mov    %rax,0x4048(%rsp)
    1f86:	00 
    1f87:	31 c0                	xor    %eax,%eax
    1f89:	8b 35 fd 64 00 00    	mov    0x64fd(%rip),%esi        # 848c <num_input_strings>
    1f8f:	8d 46 ff             	lea    -0x1(%rsi),%eax
    1f92:	48 98                	cltq   
    1f94:	48 89 c1             	mov    %rax,%rcx
    1f97:	48 c1 e1 04          	shl    $0x4,%rcx
    1f9b:	48 29 c1             	sub    %rax,%rcx
    1f9e:	48 89 c8             	mov    %rcx,%rax
    1fa1:	48 8d 0d f8 64 00 00 	lea    0x64f8(%rip),%rcx        # 84a0 <input_strings>
    1fa8:	4c 8d 04 c1          	lea    (%rcx,%rax,8),%r8
    1fac:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    1fb3:	b8 00 00 00 00       	mov    $0x0,%eax
    1fb8:	4c 89 c7             	mov    %r8,%rdi
    1fbb:	f2 ae                	repnz scas %es:(%rdi),%al
    1fbd:	48 89 c8             	mov    %rcx,%rax
    1fc0:	48 f7 d0             	not    %rax
    1fc3:	48 83 c0 63          	add    $0x63,%rax
    1fc7:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    1fcd:	0f 87 b3 00 00 00    	ja     2086 <send_msg+0x13c>
    1fd3:	85 d2                	test   %edx,%edx
    1fd5:	0f 84 cb 00 00 00    	je     20a6 <send_msg+0x15c>
    1fdb:	48 8d 05 f3 26 00 00 	lea    0x26f3(%rip),%rax        # 46d5 <transition_table+0x2f5>
    1fe2:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    1fe7:	48 83 ec 08          	sub    $0x8,%rsp
    1feb:	41 50                	push   %r8
    1fed:	56                   	push   %rsi
    1fee:	50                   	push   %rax
    1fef:	4c 8d 0d 4a 58 00 00 	lea    0x584a(%rip),%r9        # 7840 <authkey>
    1ff6:	44 8b 05 43 60 00 00 	mov    0x6043(%rip),%r8d        # 8040 <bomb_id>
    1ffd:	48 8d 0d d9 26 00 00 	lea    0x26d9(%rip),%rcx        # 46dd <transition_table+0x2fd>
    2004:	ba 00 20 00 00       	mov    $0x2000,%edx
    2009:	be 01 00 00 00       	mov    $0x1,%esi
    200e:	48 89 df             	mov    %rbx,%rdi
    2011:	b8 00 00 00 00       	mov    $0x0,%eax
    2016:	e8 a5 f3 ff ff       	callq  13c0 <__sprintf_chk@plt>
    201b:	48 83 c4 20          	add    $0x20,%rsp
    201f:	4c 8d 8c 24 40 20 00 	lea    0x2040(%rsp),%r9
    2026:	00 
    2027:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    202d:	48 89 d9             	mov    %rbx,%rcx
    2030:	48 8d 15 09 50 00 00 	lea    0x5009(%rip),%rdx        # 7040 <lab>
    2037:	48 8d 35 02 54 00 00 	lea    0x5402(%rip),%rsi        # 7440 <course>
    203e:	48 8d 3d fb 5b 00 00 	lea    0x5bfb(%rip),%rdi        # 7c40 <userid>
    2045:	e8 70 11 00 00       	callq  31ba <driver_post>
    204a:	89 c5                	mov    %eax,%ebp
    204c:	48 89 e7             	mov    %rsp,%rdi
    204f:	be 40 00 00 00       	mov    $0x40,%esi
    2054:	e8 07 f3 ff ff       	callq  1360 <gethostname@plt>
    2059:	41 89 c5             	mov    %eax,%r13d
    205c:	85 c0                	test   %eax,%eax
    205e:	75 52                	jne    20b2 <send_msg+0x168>
    2060:	89 c3                	mov    %eax,%ebx
    2062:	48 63 c3             	movslq %ebx,%rax
    2065:	48 8d 15 34 60 00 00 	lea    0x6034(%rip),%rdx        # 80a0 <host_table>
    206c:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    2070:	48 85 ff             	test   %rdi,%rdi
    2073:	74 59                	je     20ce <send_msg+0x184>
    2075:	48 89 e6             	mov    %rsp,%rsi
    2078:	e8 b3 f1 ff ff       	callq  1230 <strcasecmp@plt>
    207d:	85 c0                	test   %eax,%eax
    207f:	74 47                	je     20c8 <send_msg+0x17e>
    2081:	83 c3 01             	add    $0x1,%ebx
    2084:	eb dc                	jmp    2062 <send_msg+0x118>
    2086:	48 8d 35 33 24 00 00 	lea    0x2433(%rip),%rsi        # 44c0 <transition_table+0xe0>
    208d:	bf 01 00 00 00       	mov    $0x1,%edi
    2092:	b8 00 00 00 00       	mov    $0x0,%eax
    2097:	e8 a4 f2 ff ff       	callq  1340 <__printf_chk@plt>
    209c:	bf 08 00 00 00       	mov    $0x8,%edi
    20a1:	e8 ca f2 ff ff       	callq  1370 <exit@plt>
    20a6:	48 8d 05 1f 26 00 00 	lea    0x261f(%rip),%rax        # 46cc <transition_table+0x2ec>
    20ad:	e9 30 ff ff ff       	jmpq   1fe2 <send_msg+0x98>
    20b2:	48 8d 3d 2f 24 00 00 	lea    0x242f(%rip),%rdi        # 44e8 <transition_table+0x108>
    20b9:	e8 a2 f1 ff ff       	callq  1260 <puts@plt>
    20be:	bf 08 00 00 00       	mov    $0x8,%edi
    20c3:	e8 a8 f2 ff ff       	callq  1370 <exit@plt>
    20c8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    20ce:	41 83 fd 01          	cmp    $0x1,%r13d
    20d2:	74 25                	je     20f9 <send_msg+0x1af>
    20d4:	85 ed                	test   %ebp,%ebp
    20d6:	78 34                	js     210c <send_msg+0x1c2>
    20d8:	48 8b 84 24 48 40 00 	mov    0x4048(%rsp),%rax
    20df:	00 
    20e0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    20e7:	00 00 
    20e9:	75 38                	jne    2123 <send_msg+0x1d9>
    20eb:	48 81 c4 58 40 00 00 	add    $0x4058,%rsp
    20f2:	5b                   	pop    %rbx
    20f3:	5d                   	pop    %rbp
    20f4:	41 5c                	pop    %r12
    20f6:	41 5d                	pop    %r13
    20f8:	c3                   	retq   
    20f9:	48 63 db             	movslq %ebx,%rbx
    20fc:	48 8d 05 bd 26 00 00 	lea    0x26bd(%rip),%rax        # 47c0 <secret_tokens>
    2103:	8b 04 98             	mov    (%rax,%rbx,4),%eax
    2106:	41 89 04 24          	mov    %eax,(%r12)
    210a:	eb c8                	jmp    20d4 <send_msg+0x18a>
    210c:	48 8d bc 24 40 20 00 	lea    0x2040(%rsp),%rdi
    2113:	00 
    2114:	e8 47 f1 ff ff       	callq  1260 <puts@plt>
    2119:	bf 00 00 00 00       	mov    $0x0,%edi
    211e:	e8 4d f2 ff ff       	callq  1370 <exit@plt>
    2123:	e8 58 f1 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000002128 <explode_bomb>:
    2128:	f3 0f 1e fa          	endbr64 
    212c:	55                   	push   %rbp
    212d:	53                   	push   %rbx
    212e:	48 83 ec 68          	sub    $0x68,%rsp
    2132:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2139:	00 00 
    213b:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    2140:	31 c0                	xor    %eax,%eax
    2142:	48 8d 3d a3 25 00 00 	lea    0x25a3(%rip),%rdi        # 46ec <transition_table+0x30c>
    2149:	e8 12 f1 ff ff       	callq  1260 <puts@plt>
    214e:	48 8d 3d a0 25 00 00 	lea    0x25a0(%rip),%rdi        # 46f5 <transition_table+0x315>
    2155:	e8 06 f1 ff ff       	callq  1260 <puts@plt>
    215a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    215f:	be 40 00 00 00       	mov    $0x40,%esi
    2164:	e8 f7 f1 ff ff       	callq  1360 <gethostname@plt>
    2169:	85 c0                	test   %eax,%eax
    216b:	75 2a                	jne    2197 <explode_bomb+0x6f>
    216d:	89 c5                	mov    %eax,%ebp
    216f:	89 c3                	mov    %eax,%ebx
    2171:	48 63 c3             	movslq %ebx,%rax
    2174:	48 8d 15 25 5f 00 00 	lea    0x5f25(%rip),%rdx        # 80a0 <host_table>
    217b:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    217f:	48 85 ff             	test   %rdi,%rdi
    2182:	74 2e                	je     21b2 <explode_bomb+0x8a>
    2184:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    2189:	e8 a2 f0 ff ff       	callq  1230 <strcasecmp@plt>
    218e:	85 c0                	test   %eax,%eax
    2190:	74 1b                	je     21ad <explode_bomb+0x85>
    2192:	83 c3 01             	add    $0x1,%ebx
    2195:	eb da                	jmp    2171 <explode_bomb+0x49>
    2197:	48 8d 3d 4a 23 00 00 	lea    0x234a(%rip),%rdi        # 44e8 <transition_table+0x108>
    219e:	e8 bd f0 ff ff       	callq  1260 <puts@plt>
    21a3:	bf 08 00 00 00       	mov    $0x8,%edi
    21a8:	e8 c3 f1 ff ff       	callq  1370 <exit@plt>
    21ad:	bd 01 00 00 00       	mov    $0x1,%ebp
    21b2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    21b9:	00 
    21ba:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    21bf:	bf 00 00 00 00       	mov    $0x0,%edi
    21c4:	e8 81 fd ff ff       	callq  1f4a <send_msg>
    21c9:	48 63 db             	movslq %ebx,%rbx
    21cc:	48 8d 05 ed 25 00 00 	lea    0x25ed(%rip),%rax        # 47c0 <secret_tokens>
    21d3:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    21d7:	39 0c 98             	cmp    %ecx,(%rax,%rbx,4)
    21da:	75 04                	jne    21e0 <explode_bomb+0xb8>
    21dc:	85 ed                	test   %ebp,%ebp
    21de:	75 20                	jne    2200 <explode_bomb+0xd8>
    21e0:	48 8d 35 29 23 00 00 	lea    0x2329(%rip),%rsi        # 4510 <transition_table+0x130>
    21e7:	bf 01 00 00 00       	mov    $0x1,%edi
    21ec:	b8 00 00 00 00       	mov    $0x0,%eax
    21f1:	e8 4a f1 ff ff       	callq  1340 <__printf_chk@plt>
    21f6:	bf 08 00 00 00       	mov    $0x8,%edi
    21fb:	e8 70 f1 ff ff       	callq  1370 <exit@plt>
    2200:	48 8d 3d 51 23 00 00 	lea    0x2351(%rip),%rdi        # 4558 <transition_table+0x178>
    2207:	e8 54 f0 ff ff       	callq  1260 <puts@plt>
    220c:	bf 08 00 00 00       	mov    $0x8,%edi
    2211:	e8 5a f1 ff ff       	callq  1370 <exit@plt>

0000000000002216 <read_six_numbers>:
    2216:	f3 0f 1e fa          	endbr64 
    221a:	48 83 ec 08          	sub    $0x8,%rsp
    221e:	48 89 f2             	mov    %rsi,%rdx
    2221:	48 8d 4e 04          	lea    0x4(%rsi),%rcx
    2225:	48 8d 46 14          	lea    0x14(%rsi),%rax
    2229:	50                   	push   %rax
    222a:	48 8d 46 10          	lea    0x10(%rsi),%rax
    222e:	50                   	push   %rax
    222f:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9
    2233:	4c 8d 46 08          	lea    0x8(%rsi),%r8
    2237:	48 8d 35 ce 24 00 00 	lea    0x24ce(%rip),%rsi        # 470c <transition_table+0x32c>
    223e:	b8 00 00 00 00       	mov    $0x0,%eax
    2243:	e8 e8 f0 ff ff       	callq  1330 <__isoc99_sscanf@plt>
    2248:	48 83 c4 10          	add    $0x10,%rsp
    224c:	83 f8 05             	cmp    $0x5,%eax
    224f:	7e 05                	jle    2256 <read_six_numbers+0x40>
    2251:	48 83 c4 08          	add    $0x8,%rsp
    2255:	c3                   	retq   
    2256:	e8 cd fe ff ff       	callq  2128 <explode_bomb>

000000000000225b <read_line>:
    225b:	f3 0f 1e fa          	endbr64 
    225f:	48 83 ec 08          	sub    $0x8,%rsp
    2263:	b8 00 00 00 00       	mov    $0x0,%eax
    2268:	e8 92 fc ff ff       	callq  1eff <skip>
    226d:	48 85 c0             	test   %rax,%rax
    2270:	74 72                	je     22e4 <read_line+0x89>
    2272:	8b 15 14 62 00 00    	mov    0x6214(%rip),%edx        # 848c <num_input_strings>
    2278:	48 63 ca             	movslq %edx,%rcx
    227b:	48 89 c8             	mov    %rcx,%rax
    227e:	48 c1 e0 04          	shl    $0x4,%rax
    2282:	48 29 c8             	sub    %rcx,%rax
    2285:	48 8d 0d 14 62 00 00 	lea    0x6214(%rip),%rcx        # 84a0 <input_strings>
    228c:	48 8d 34 c1          	lea    (%rcx,%rax,8),%rsi
    2290:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    2297:	b8 00 00 00 00       	mov    $0x0,%eax
    229c:	48 89 f7             	mov    %rsi,%rdi
    229f:	f2 ae                	repnz scas %es:(%rdi),%al
    22a1:	48 f7 d1             	not    %rcx
    22a4:	48 83 e9 01          	sub    $0x1,%rcx
    22a8:	83 f9 76             	cmp    $0x76,%ecx
    22ab:	0f 8f ab 00 00 00    	jg     235c <read_line+0x101>
    22b1:	83 e9 01             	sub    $0x1,%ecx
    22b4:	48 63 c9             	movslq %ecx,%rcx
    22b7:	48 63 fa             	movslq %edx,%rdi
    22ba:	48 89 f8             	mov    %rdi,%rax
    22bd:	48 c1 e0 04          	shl    $0x4,%rax
    22c1:	48 29 f8             	sub    %rdi,%rax
    22c4:	48 8d 3d d5 61 00 00 	lea    0x61d5(%rip),%rdi        # 84a0 <input_strings>
    22cb:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    22cf:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    22d3:	83 c2 01             	add    $0x1,%edx
    22d6:	89 15 b0 61 00 00    	mov    %edx,0x61b0(%rip)        # 848c <num_input_strings>
    22dc:	48 89 f0             	mov    %rsi,%rax
    22df:	48 83 c4 08          	add    $0x8,%rsp
    22e3:	c3                   	retq   
    22e4:	48 8b 05 85 61 00 00 	mov    0x6185(%rip),%rax        # 8470 <stdin@@GLIBC_2.2.5>
    22eb:	48 39 05 9e 61 00 00 	cmp    %rax,0x619e(%rip)        # 8490 <infile>
    22f2:	74 1b                	je     230f <read_line+0xb4>
    22f4:	48 8d 3d 41 24 00 00 	lea    0x2441(%rip),%rdi        # 473c <transition_table+0x35c>
    22fb:	e8 10 ef ff ff       	callq  1210 <getenv@plt>
    2300:	48 85 c0             	test   %rax,%rax
    2303:	74 20                	je     2325 <read_line+0xca>
    2305:	bf 00 00 00 00       	mov    $0x0,%edi
    230a:	e8 61 f0 ff ff       	callq  1370 <exit@plt>
    230f:	48 8d 3d 08 24 00 00 	lea    0x2408(%rip),%rdi        # 471e <transition_table+0x33e>
    2316:	e8 45 ef ff ff       	callq  1260 <puts@plt>
    231b:	bf 08 00 00 00       	mov    $0x8,%edi
    2320:	e8 4b f0 ff ff       	callq  1370 <exit@plt>
    2325:	48 8b 05 44 61 00 00 	mov    0x6144(%rip),%rax        # 8470 <stdin@@GLIBC_2.2.5>
    232c:	48 89 05 5d 61 00 00 	mov    %rax,0x615d(%rip)        # 8490 <infile>
    2333:	b8 00 00 00 00       	mov    $0x0,%eax
    2338:	e8 c2 fb ff ff       	callq  1eff <skip>
    233d:	48 85 c0             	test   %rax,%rax
    2340:	0f 85 2c ff ff ff    	jne    2272 <read_line+0x17>
    2346:	48 8d 3d d1 23 00 00 	lea    0x23d1(%rip),%rdi        # 471e <transition_table+0x33e>
    234d:	e8 0e ef ff ff       	callq  1260 <puts@plt>
    2352:	bf 00 00 00 00       	mov    $0x0,%edi
    2357:	e8 14 f0 ff ff       	callq  1370 <exit@plt>
    235c:	48 8d 3d e4 23 00 00 	lea    0x23e4(%rip),%rdi        # 4747 <transition_table+0x367>
    2363:	e8 f8 ee ff ff       	callq  1260 <puts@plt>
    2368:	8b 05 1e 61 00 00    	mov    0x611e(%rip),%eax        # 848c <num_input_strings>
    236e:	8d 50 01             	lea    0x1(%rax),%edx
    2371:	89 15 15 61 00 00    	mov    %edx,0x6115(%rip)        # 848c <num_input_strings>
    2377:	48 98                	cltq   
    2379:	48 6b c0 78          	imul   $0x78,%rax,%rax
    237d:	48 8d 15 1c 61 00 00 	lea    0x611c(%rip),%rdx        # 84a0 <input_strings>
    2384:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
    238b:	75 6e 63 
    238e:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
    2395:	2a 2a 00 
    2398:	48 89 34 02          	mov    %rsi,(%rdx,%rax,1)
    239c:	48 89 7c 02 08       	mov    %rdi,0x8(%rdx,%rax,1)
    23a1:	e8 82 fd ff ff       	callq  2128 <explode_bomb>

00000000000023a6 <phase_defused>:
    23a6:	f3 0f 1e fa          	endbr64 
    23aa:	41 54                	push   %r12
    23ac:	55                   	push   %rbp
    23ad:	53                   	push   %rbx
    23ae:	48 83 ec 50          	sub    $0x50,%rsp
    23b2:	49 89 fc             	mov    %rdi,%r12
    23b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    23bc:	00 00 
    23be:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    23c3:	31 c0                	xor    %eax,%eax
    23c5:	48 89 e7             	mov    %rsp,%rdi
    23c8:	be 40 00 00 00       	mov    $0x40,%esi
    23cd:	e8 8e ef ff ff       	callq  1360 <gethostname@plt>
    23d2:	85 c0                	test   %eax,%eax
    23d4:	75 06                	jne    23dc <phase_defused+0x36>
    23d6:	89 c5                	mov    %eax,%ebp
    23d8:	89 c3                	mov    %eax,%ebx
    23da:	eb 19                	jmp    23f5 <phase_defused+0x4f>
    23dc:	48 8d 3d 05 21 00 00 	lea    0x2105(%rip),%rdi        # 44e8 <transition_table+0x108>
    23e3:	e8 78 ee ff ff       	callq  1260 <puts@plt>
    23e8:	bf 08 00 00 00       	mov    $0x8,%edi
    23ed:	e8 7e ef ff ff       	callq  1370 <exit@plt>
    23f2:	83 c3 01             	add    $0x1,%ebx
    23f5:	48 63 c3             	movslq %ebx,%rax
    23f8:	48 8d 15 a1 5c 00 00 	lea    0x5ca1(%rip),%rdx        # 80a0 <host_table>
    23ff:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
    2403:	48 85 ff             	test   %rdi,%rdi
    2406:	74 11                	je     2419 <phase_defused+0x73>
    2408:	48 89 e6             	mov    %rsp,%rsi
    240b:	e8 20 ee ff ff       	callq  1230 <strcasecmp@plt>
    2410:	85 c0                	test   %eax,%eax
    2412:	75 de                	jne    23f2 <phase_defused+0x4c>
    2414:	bd 01 00 00 00       	mov    $0x1,%ebp
    2419:	41 c7 04 24 00 00 00 	movl   $0x0,(%r12)
    2420:	00 
    2421:	4c 89 e6             	mov    %r12,%rsi
    2424:	bf 01 00 00 00       	mov    $0x1,%edi
    2429:	e8 1c fb ff ff       	callq  1f4a <send_msg>
    242e:	48 63 db             	movslq %ebx,%rbx
    2431:	48 8d 05 88 23 00 00 	lea    0x2388(%rip),%rax        # 47c0 <secret_tokens>
    2438:	8b 04 98             	mov    (%rax,%rbx,4),%eax
    243b:	41 39 04 24          	cmp    %eax,(%r12)
    243f:	75 2a                	jne    246b <phase_defused+0xc5>
    2441:	85 ed                	test   %ebp,%ebp
    2443:	74 26                	je     246b <phase_defused+0xc5>
    2445:	83 3d 40 60 00 00 06 	cmpl   $0x6,0x6040(%rip)        # 848c <num_input_strings>
    244c:	74 3d                	je     248b <phase_defused+0xe5>
    244e:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    2453:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    245a:	00 00 
    245c:	0f 85 87 00 00 00    	jne    24e9 <phase_defused+0x143>
    2462:	48 83 c4 50          	add    $0x50,%rsp
    2466:	5b                   	pop    %rbx
    2467:	5d                   	pop    %rbp
    2468:	41 5c                	pop    %r12
    246a:	c3                   	retq   
    246b:	48 8d 35 9e 20 00 00 	lea    0x209e(%rip),%rsi        # 4510 <transition_table+0x130>
    2472:	bf 01 00 00 00       	mov    $0x1,%edi
    2477:	b8 00 00 00 00       	mov    $0x0,%eax
    247c:	e8 bf ee ff ff       	callq  1340 <__printf_chk@plt>
    2481:	bf 08 00 00 00       	mov    $0x8,%edi
    2486:	e8 e5 ee ff ff       	callq  1370 <exit@plt>
    248b:	e8 c8 f1 ff ff       	callq  1658 <abracadabra>
    2490:	85 c0                	test   %eax,%eax
    2492:	75 1a                	jne    24ae <phase_defused+0x108>
    2494:	48 8d 3d 85 21 00 00 	lea    0x2185(%rip),%rdi        # 4620 <transition_table+0x240>
    249b:	e8 c0 ed ff ff       	callq  1260 <puts@plt>
    24a0:	48 8d 3d a9 21 00 00 	lea    0x21a9(%rip),%rdi        # 4650 <transition_table+0x270>
    24a7:	e8 b4 ed ff ff       	callq  1260 <puts@plt>
    24ac:	eb a0                	jmp    244e <phase_defused+0xa8>
    24ae:	e8 56 f2 ff ff       	callq  1709 <alohomora>
    24b3:	85 c0                	test   %eax,%eax
    24b5:	74 24                	je     24db <phase_defused+0x135>
    24b7:	48 8d 3d c2 20 00 00 	lea    0x20c2(%rip),%rdi        # 4580 <transition_table+0x1a0>
    24be:	e8 9d ed ff ff       	callq  1260 <puts@plt>
    24c3:	48 8d 3d de 20 00 00 	lea    0x20de(%rip),%rdi        # 45a8 <transition_table+0x1c8>
    24ca:	e8 91 ed ff ff       	callq  1260 <puts@plt>
    24cf:	b8 00 00 00 00       	mov    $0x0,%eax
    24d4:	e8 0e f7 ff ff       	callq  1be7 <secret_phase>
    24d9:	eb b9                	jmp    2494 <phase_defused+0xee>
    24db:	48 8d 3d fe 20 00 00 	lea    0x20fe(%rip),%rdi        # 45e0 <transition_table+0x200>
    24e2:	e8 79 ed ff ff       	callq  1260 <puts@plt>
    24e7:	eb ab                	jmp    2494 <phase_defused+0xee>
    24e9:	e8 92 ed ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000024ee <rio_readinitb>:
    24ee:	89 37                	mov    %esi,(%rdi)
    24f0:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
    24f7:	48 8d 47 10          	lea    0x10(%rdi),%rax
    24fb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    24ff:	c3                   	retq   

0000000000002500 <sigalrm_handler>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	50                   	push   %rax
    2505:	58                   	pop    %rax
    2506:	48 83 ec 08          	sub    $0x8,%rsp
    250a:	b9 00 00 00 00       	mov    $0x0,%ecx
    250f:	48 8d 15 ca 22 00 00 	lea    0x22ca(%rip),%rdx        # 47e0 <secret_tokens+0x20>
    2516:	be 01 00 00 00       	mov    $0x1,%esi
    251b:	48 8b 3d 5e 5f 00 00 	mov    0x5f5e(%rip),%rdi        # 8480 <stderr@@GLIBC_2.2.5>
    2522:	b8 00 00 00 00       	mov    $0x0,%eax
    2527:	e8 64 ee ff ff       	callq  1390 <__fprintf_chk@plt>
    252c:	bf 01 00 00 00       	mov    $0x1,%edi
    2531:	e8 3a ee ff ff       	callq  1370 <exit@plt>

0000000000002536 <rio_writen>:
    2536:	41 55                	push   %r13
    2538:	41 54                	push   %r12
    253a:	55                   	push   %rbp
    253b:	53                   	push   %rbx
    253c:	48 83 ec 08          	sub    $0x8,%rsp
    2540:	41 89 fc             	mov    %edi,%r12d
    2543:	48 89 f5             	mov    %rsi,%rbp
    2546:	49 89 d5             	mov    %rdx,%r13
    2549:	48 89 d3             	mov    %rdx,%rbx
    254c:	eb 06                	jmp    2554 <rio_writen+0x1e>
    254e:	48 29 c3             	sub    %rax,%rbx
    2551:	48 01 c5             	add    %rax,%rbp
    2554:	48 85 db             	test   %rbx,%rbx
    2557:	74 24                	je     257d <rio_writen+0x47>
    2559:	48 89 da             	mov    %rbx,%rdx
    255c:	48 89 ee             	mov    %rbp,%rsi
    255f:	44 89 e7             	mov    %r12d,%edi
    2562:	e8 09 ed ff ff       	callq  1270 <write@plt>
    2567:	48 85 c0             	test   %rax,%rax
    256a:	7f e2                	jg     254e <rio_writen+0x18>
    256c:	e8 cf ec ff ff       	callq  1240 <__errno_location@plt>
    2571:	83 38 04             	cmpl   $0x4,(%rax)
    2574:	75 15                	jne    258b <rio_writen+0x55>
    2576:	b8 00 00 00 00       	mov    $0x0,%eax
    257b:	eb d1                	jmp    254e <rio_writen+0x18>
    257d:	4c 89 e8             	mov    %r13,%rax
    2580:	48 83 c4 08          	add    $0x8,%rsp
    2584:	5b                   	pop    %rbx
    2585:	5d                   	pop    %rbp
    2586:	41 5c                	pop    %r12
    2588:	41 5d                	pop    %r13
    258a:	c3                   	retq   
    258b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    2592:	eb ec                	jmp    2580 <rio_writen+0x4a>

0000000000002594 <rio_read>:
    2594:	41 55                	push   %r13
    2596:	41 54                	push   %r12
    2598:	55                   	push   %rbp
    2599:	53                   	push   %rbx
    259a:	48 83 ec 08          	sub    $0x8,%rsp
    259e:	48 89 fb             	mov    %rdi,%rbx
    25a1:	49 89 f5             	mov    %rsi,%r13
    25a4:	49 89 d4             	mov    %rdx,%r12
    25a7:	eb 17                	jmp    25c0 <rio_read+0x2c>
    25a9:	e8 92 ec ff ff       	callq  1240 <__errno_location@plt>
    25ae:	83 38 04             	cmpl   $0x4,(%rax)
    25b1:	74 0d                	je     25c0 <rio_read+0x2c>
    25b3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    25ba:	eb 54                	jmp    2610 <rio_read+0x7c>
    25bc:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    25c0:	8b 6b 04             	mov    0x4(%rbx),%ebp
    25c3:	85 ed                	test   %ebp,%ebp
    25c5:	7f 23                	jg     25ea <rio_read+0x56>
    25c7:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
    25cb:	8b 3b                	mov    (%rbx),%edi
    25cd:	ba 00 20 00 00       	mov    $0x2000,%edx
    25d2:	48 89 ee             	mov    %rbp,%rsi
    25d5:	e8 d6 ec ff ff       	callq  12b0 <read@plt>
    25da:	89 43 04             	mov    %eax,0x4(%rbx)
    25dd:	85 c0                	test   %eax,%eax
    25df:	78 c8                	js     25a9 <rio_read+0x15>
    25e1:	75 d9                	jne    25bc <rio_read+0x28>
    25e3:	b8 00 00 00 00       	mov    $0x0,%eax
    25e8:	eb 26                	jmp    2610 <rio_read+0x7c>
    25ea:	89 e8                	mov    %ebp,%eax
    25ec:	4c 39 e0             	cmp    %r12,%rax
    25ef:	72 03                	jb     25f4 <rio_read+0x60>
    25f1:	44 89 e5             	mov    %r12d,%ebp
    25f4:	4c 63 e5             	movslq %ebp,%r12
    25f7:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    25fb:	4c 89 e2             	mov    %r12,%rdx
    25fe:	4c 89 ef             	mov    %r13,%rdi
    2601:	e8 fa ec ff ff       	callq  1300 <memcpy@plt>
    2606:	4c 01 63 08          	add    %r12,0x8(%rbx)
    260a:	29 6b 04             	sub    %ebp,0x4(%rbx)
    260d:	4c 89 e0             	mov    %r12,%rax
    2610:	48 83 c4 08          	add    $0x8,%rsp
    2614:	5b                   	pop    %rbx
    2615:	5d                   	pop    %rbp
    2616:	41 5c                	pop    %r12
    2618:	41 5d                	pop    %r13
    261a:	c3                   	retq   

000000000000261b <rio_readlineb>:
    261b:	41 55                	push   %r13
    261d:	41 54                	push   %r12
    261f:	55                   	push   %rbp
    2620:	53                   	push   %rbx
    2621:	48 83 ec 18          	sub    $0x18,%rsp
    2625:	49 89 fd             	mov    %rdi,%r13
    2628:	48 89 f5             	mov    %rsi,%rbp
    262b:	49 89 d4             	mov    %rdx,%r12
    262e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2635:	00 00 
    2637:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    263c:	31 c0                	xor    %eax,%eax
    263e:	bb 01 00 00 00       	mov    $0x1,%ebx
    2643:	eb 18                	jmp    265d <rio_readlineb+0x42>
    2645:	85 c0                	test   %eax,%eax
    2647:	75 65                	jne    26ae <rio_readlineb+0x93>
    2649:	48 83 fb 01          	cmp    $0x1,%rbx
    264d:	75 3d                	jne    268c <rio_readlineb+0x71>
    264f:	b8 00 00 00 00       	mov    $0x0,%eax
    2654:	eb 3d                	jmp    2693 <rio_readlineb+0x78>
    2656:	48 83 c3 01          	add    $0x1,%rbx
    265a:	48 89 d5             	mov    %rdx,%rbp
    265d:	4c 39 e3             	cmp    %r12,%rbx
    2660:	73 2a                	jae    268c <rio_readlineb+0x71>
    2662:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
    2667:	ba 01 00 00 00       	mov    $0x1,%edx
    266c:	4c 89 ef             	mov    %r13,%rdi
    266f:	e8 20 ff ff ff       	callq  2594 <rio_read>
    2674:	83 f8 01             	cmp    $0x1,%eax
    2677:	75 cc                	jne    2645 <rio_readlineb+0x2a>
    2679:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    267d:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
    2682:	88 45 00             	mov    %al,0x0(%rbp)
    2685:	3c 0a                	cmp    $0xa,%al
    2687:	75 cd                	jne    2656 <rio_readlineb+0x3b>
    2689:	48 89 d5             	mov    %rdx,%rbp
    268c:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
    2690:	48 89 d8             	mov    %rbx,%rax
    2693:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2698:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    269f:	00 00 
    26a1:	75 14                	jne    26b7 <rio_readlineb+0x9c>
    26a3:	48 83 c4 18          	add    $0x18,%rsp
    26a7:	5b                   	pop    %rbx
    26a8:	5d                   	pop    %rbp
    26a9:	41 5c                	pop    %r12
    26ab:	41 5d                	pop    %r13
    26ad:	c3                   	retq   
    26ae:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    26b5:	eb dc                	jmp    2693 <rio_readlineb+0x78>
    26b7:	e8 c4 eb ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000026bc <urlencode>:
    26bc:	41 54                	push   %r12
    26be:	55                   	push   %rbp
    26bf:	53                   	push   %rbx
    26c0:	48 83 ec 10          	sub    $0x10,%rsp
    26c4:	48 89 fb             	mov    %rdi,%rbx
    26c7:	48 89 f5             	mov    %rsi,%rbp
    26ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    26d1:	00 00 
    26d3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    26d8:	31 c0                	xor    %eax,%eax
    26da:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    26e1:	f2 ae                	repnz scas %es:(%rdi),%al
    26e3:	48 f7 d1             	not    %rcx
    26e6:	8d 41 ff             	lea    -0x1(%rcx),%eax
    26e9:	eb 0f                	jmp    26fa <urlencode+0x3e>
    26eb:	44 88 45 00          	mov    %r8b,0x0(%rbp)
    26ef:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    26f3:	48 83 c3 01          	add    $0x1,%rbx
    26f7:	44 89 e0             	mov    %r12d,%eax
    26fa:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
    26fe:	85 c0                	test   %eax,%eax
    2700:	0f 84 a8 00 00 00    	je     27ae <urlencode+0xf2>
    2706:	44 0f b6 03          	movzbl (%rbx),%r8d
    270a:	41 80 f8 2a          	cmp    $0x2a,%r8b
    270e:	0f 94 c2             	sete   %dl
    2711:	41 80 f8 2d          	cmp    $0x2d,%r8b
    2715:	0f 94 c0             	sete   %al
    2718:	08 c2                	or     %al,%dl
    271a:	75 cf                	jne    26eb <urlencode+0x2f>
    271c:	41 80 f8 2e          	cmp    $0x2e,%r8b
    2720:	74 c9                	je     26eb <urlencode+0x2f>
    2722:	41 80 f8 5f          	cmp    $0x5f,%r8b
    2726:	74 c3                	je     26eb <urlencode+0x2f>
    2728:	41 8d 40 d0          	lea    -0x30(%r8),%eax
    272c:	3c 09                	cmp    $0x9,%al
    272e:	76 bb                	jbe    26eb <urlencode+0x2f>
    2730:	41 8d 40 bf          	lea    -0x41(%r8),%eax
    2734:	3c 19                	cmp    $0x19,%al
    2736:	76 b3                	jbe    26eb <urlencode+0x2f>
    2738:	41 8d 40 9f          	lea    -0x61(%r8),%eax
    273c:	3c 19                	cmp    $0x19,%al
    273e:	76 ab                	jbe    26eb <urlencode+0x2f>
    2740:	41 80 f8 20          	cmp    $0x20,%r8b
    2744:	74 56                	je     279c <urlencode+0xe0>
    2746:	41 8d 40 e0          	lea    -0x20(%r8),%eax
    274a:	3c 5f                	cmp    $0x5f,%al
    274c:	0f 96 c2             	setbe  %dl
    274f:	41 80 f8 09          	cmp    $0x9,%r8b
    2753:	0f 94 c0             	sete   %al
    2756:	08 c2                	or     %al,%dl
    2758:	74 4f                	je     27a9 <urlencode+0xed>
    275a:	48 89 e7             	mov    %rsp,%rdi
    275d:	45 0f b6 c0          	movzbl %r8b,%r8d
    2761:	48 8d 0d 2d 21 00 00 	lea    0x212d(%rip),%rcx        # 4895 <secret_tokens+0xd5>
    2768:	ba 08 00 00 00       	mov    $0x8,%edx
    276d:	be 01 00 00 00       	mov    $0x1,%esi
    2772:	b8 00 00 00 00       	mov    $0x0,%eax
    2777:	e8 44 ec ff ff       	callq  13c0 <__sprintf_chk@plt>
    277c:	0f b6 04 24          	movzbl (%rsp),%eax
    2780:	88 45 00             	mov    %al,0x0(%rbp)
    2783:	0f b6 44 24 01       	movzbl 0x1(%rsp),%eax
    2788:	88 45 01             	mov    %al,0x1(%rbp)
    278b:	0f b6 44 24 02       	movzbl 0x2(%rsp),%eax
    2790:	88 45 02             	mov    %al,0x2(%rbp)
    2793:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
    2797:	e9 57 ff ff ff       	jmpq   26f3 <urlencode+0x37>
    279c:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
    27a0:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    27a4:	e9 4a ff ff ff       	jmpq   26f3 <urlencode+0x37>
    27a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    27ae:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    27b3:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    27ba:	00 00 
    27bc:	75 09                	jne    27c7 <urlencode+0x10b>
    27be:	48 83 c4 10          	add    $0x10,%rsp
    27c2:	5b                   	pop    %rbx
    27c3:	5d                   	pop    %rbp
    27c4:	41 5c                	pop    %r12
    27c6:	c3                   	retq   
    27c7:	e8 b4 ea ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000027cc <submitr>:
    27cc:	f3 0f 1e fa          	endbr64 
    27d0:	41 57                	push   %r15
    27d2:	41 56                	push   %r14
    27d4:	41 55                	push   %r13
    27d6:	41 54                	push   %r12
    27d8:	55                   	push   %rbp
    27d9:	53                   	push   %rbx
    27da:	4c 8d 9c 24 00 60 ff 	lea    -0xa000(%rsp),%r11
    27e1:	ff 
    27e2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    27e9:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    27ee:	4c 39 dc             	cmp    %r11,%rsp
    27f1:	75 ef                	jne    27e2 <submitr+0x16>
    27f3:	48 83 ec 68          	sub    $0x68,%rsp
    27f7:	49 89 fc             	mov    %rdi,%r12
    27fa:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    27fe:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    2803:	49 89 cd             	mov    %rcx,%r13
    2806:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    280b:	4d 89 ce             	mov    %r9,%r14
    280e:	48 8b ac 24 a0 a0 00 	mov    0xa0a0(%rsp),%rbp
    2815:	00 
    2816:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    281d:	00 00 
    281f:	48 89 84 24 58 a0 00 	mov    %rax,0xa058(%rsp)
    2826:	00 
    2827:	31 c0                	xor    %eax,%eax
    2829:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
    2830:	00 
    2831:	ba 00 00 00 00       	mov    $0x0,%edx
    2836:	be 01 00 00 00       	mov    $0x1,%esi
    283b:	bf 02 00 00 00       	mov    $0x2,%edi
    2840:	e8 8b eb ff ff       	callq  13d0 <socket@plt>
    2845:	85 c0                	test   %eax,%eax
    2847:	0f 88 a5 02 00 00    	js     2af2 <submitr+0x326>
    284d:	89 c3                	mov    %eax,%ebx
    284f:	4c 89 e7             	mov    %r12,%rdi
    2852:	e8 89 ea ff ff       	callq  12e0 <gethostbyname@plt>
    2857:	48 85 c0             	test   %rax,%rax
    285a:	0f 84 de 02 00 00    	je     2b3e <submitr+0x372>
    2860:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
    2865:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    286c:	00 00 
    286e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    2875:	00 00 
    2877:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%rsp)
    287e:	48 63 50 14          	movslq 0x14(%rax),%rdx
    2882:	48 8b 40 18          	mov    0x18(%rax),%rax
    2886:	48 8b 30             	mov    (%rax),%rsi
    2889:	48 8d 7c 24 34       	lea    0x34(%rsp),%rdi
    288e:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2893:	e8 58 ea ff ff       	callq  12f0 <__memmove_chk@plt>
    2898:	0f b7 74 24 1c       	movzwl 0x1c(%rsp),%esi
    289d:	66 c1 c6 08          	rol    $0x8,%si
    28a1:	66 89 74 24 32       	mov    %si,0x32(%rsp)
    28a6:	ba 10 00 00 00       	mov    $0x10,%edx
    28ab:	4c 89 fe             	mov    %r15,%rsi
    28ae:	89 df                	mov    %ebx,%edi
    28b0:	e8 cb ea ff ff       	callq  1380 <connect@plt>
    28b5:	85 c0                	test   %eax,%eax
    28b7:	0f 88 f7 02 00 00    	js     2bb4 <submitr+0x3e8>
    28bd:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    28c4:	b8 00 00 00 00       	mov    $0x0,%eax
    28c9:	48 89 f1             	mov    %rsi,%rcx
    28cc:	4c 89 f7             	mov    %r14,%rdi
    28cf:	f2 ae                	repnz scas %es:(%rdi),%al
    28d1:	48 89 ca             	mov    %rcx,%rdx
    28d4:	48 f7 d2             	not    %rdx
    28d7:	48 89 f1             	mov    %rsi,%rcx
    28da:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    28df:	f2 ae                	repnz scas %es:(%rdi),%al
    28e1:	48 f7 d1             	not    %rcx
    28e4:	49 89 c8             	mov    %rcx,%r8
    28e7:	48 89 f1             	mov    %rsi,%rcx
    28ea:	4c 89 ef             	mov    %r13,%rdi
    28ed:	f2 ae                	repnz scas %es:(%rdi),%al
    28ef:	48 f7 d1             	not    %rcx
    28f2:	4d 8d 44 08 fe       	lea    -0x2(%r8,%rcx,1),%r8
    28f7:	48 89 f1             	mov    %rsi,%rcx
    28fa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    28ff:	f2 ae                	repnz scas %es:(%rdi),%al
    2901:	48 89 c8             	mov    %rcx,%rax
    2904:	48 f7 d0             	not    %rax
    2907:	49 8d 4c 00 ff       	lea    -0x1(%r8,%rax,1),%rcx
    290c:	48 8d 44 52 fd       	lea    -0x3(%rdx,%rdx,2),%rax
    2911:	48 8d 84 01 80 00 00 	lea    0x80(%rcx,%rax,1),%rax
    2918:	00 
    2919:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    291f:	0f 87 f7 02 00 00    	ja     2c1c <submitr+0x450>
    2925:	48 8d b4 24 50 40 00 	lea    0x4050(%rsp),%rsi
    292c:	00 
    292d:	b9 00 04 00 00       	mov    $0x400,%ecx
    2932:	b8 00 00 00 00       	mov    $0x0,%eax
    2937:	48 89 f7             	mov    %rsi,%rdi
    293a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    293d:	4c 89 f7             	mov    %r14,%rdi
    2940:	e8 77 fd ff ff       	callq  26bc <urlencode>
    2945:	85 c0                	test   %eax,%eax
    2947:	0f 88 42 03 00 00    	js     2c8f <submitr+0x4c3>
    294d:	4c 8d bc 24 50 20 00 	lea    0x2050(%rsp),%r15
    2954:	00 
    2955:	48 83 ec 08          	sub    $0x8,%rsp
    2959:	41 54                	push   %r12
    295b:	48 8d 84 24 60 40 00 	lea    0x4060(%rsp),%rax
    2962:	00 
    2963:	50                   	push   %rax
    2964:	41 55                	push   %r13
    2966:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    296b:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    2970:	48 8d 0d 91 1e 00 00 	lea    0x1e91(%rip),%rcx        # 4808 <secret_tokens+0x48>
    2977:	ba 00 20 00 00       	mov    $0x2000,%edx
    297c:	be 01 00 00 00       	mov    $0x1,%esi
    2981:	4c 89 ff             	mov    %r15,%rdi
    2984:	b8 00 00 00 00       	mov    $0x0,%eax
    2989:	e8 32 ea ff ff       	callq  13c0 <__sprintf_chk@plt>
    298e:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    2995:	b8 00 00 00 00       	mov    $0x0,%eax
    299a:	4c 89 ff             	mov    %r15,%rdi
    299d:	f2 ae                	repnz scas %es:(%rdi),%al
    299f:	48 f7 d1             	not    %rcx
    29a2:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    29a6:	48 83 c4 20          	add    $0x20,%rsp
    29aa:	4c 89 fe             	mov    %r15,%rsi
    29ad:	89 df                	mov    %ebx,%edi
    29af:	e8 82 fb ff ff       	callq  2536 <rio_writen>
    29b4:	48 85 c0             	test   %rax,%rax
    29b7:	0f 88 5d 03 00 00    	js     2d1a <submitr+0x54e>
    29bd:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    29c2:	89 de                	mov    %ebx,%esi
    29c4:	4c 89 e7             	mov    %r12,%rdi
    29c7:	e8 22 fb ff ff       	callq  24ee <rio_readinitb>
    29cc:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    29d3:	00 
    29d4:	ba 00 20 00 00       	mov    $0x2000,%edx
    29d9:	4c 89 e7             	mov    %r12,%rdi
    29dc:	e8 3a fc ff ff       	callq  261b <rio_readlineb>
    29e1:	48 85 c0             	test   %rax,%rax
    29e4:	0f 8e 9c 03 00 00    	jle    2d86 <submitr+0x5ba>
    29ea:	48 8d 4c 24 2c       	lea    0x2c(%rsp),%rcx
    29ef:	48 8d 94 24 50 60 00 	lea    0x6050(%rsp),%rdx
    29f6:	00 
    29f7:	48 8d bc 24 50 20 00 	lea    0x2050(%rsp),%rdi
    29fe:	00 
    29ff:	4c 8d 84 24 50 80 00 	lea    0x8050(%rsp),%r8
    2a06:	00 
    2a07:	48 8d 35 8e 1e 00 00 	lea    0x1e8e(%rip),%rsi        # 489c <secret_tokens+0xdc>
    2a0e:	b8 00 00 00 00       	mov    $0x0,%eax
    2a13:	e8 18 e9 ff ff       	callq  1330 <__isoc99_sscanf@plt>
    2a18:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2a1f:	00 
    2a20:	b9 03 00 00 00       	mov    $0x3,%ecx
    2a25:	48 8d 3d 87 1e 00 00 	lea    0x1e87(%rip),%rdi        # 48b3 <secret_tokens+0xf3>
    2a2c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2a2e:	0f 97 c0             	seta   %al
    2a31:	1c 00                	sbb    $0x0,%al
    2a33:	84 c0                	test   %al,%al
    2a35:	0f 84 cb 03 00 00    	je     2e06 <submitr+0x63a>
    2a3b:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2a42:	00 
    2a43:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    2a48:	ba 00 20 00 00       	mov    $0x2000,%edx
    2a4d:	e8 c9 fb ff ff       	callq  261b <rio_readlineb>
    2a52:	48 85 c0             	test   %rax,%rax
    2a55:	7f c1                	jg     2a18 <submitr+0x24c>
    2a57:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2a5e:	3a 20 43 
    2a61:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2a68:	20 75 6e 
    2a6b:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2a6f:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2a73:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2a7a:	74 6f 20 
    2a7d:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
    2a84:	68 65 61 
    2a87:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2a8b:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2a8f:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
    2a96:	66 72 6f 
    2a99:	48 ba 6d 20 41 75 74 	movabs $0x616c6f747541206d,%rdx
    2aa0:	6f 6c 61 
    2aa3:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2aa7:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2aab:	48 b8 62 20 73 65 72 	movabs $0x7265767265732062,%rax
    2ab2:	76 65 72 
    2ab5:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2ab9:	c6 45 38 00          	movb   $0x0,0x38(%rbp)
    2abd:	89 df                	mov    %ebx,%edi
    2abf:	e8 dc e7 ff ff       	callq  12a0 <close@plt>
    2ac4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2ac9:	48 8b 9c 24 58 a0 00 	mov    0xa058(%rsp),%rbx
    2ad0:	00 
    2ad1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    2ad8:	00 00 
    2ada:	0f 85 96 04 00 00    	jne    2f76 <submitr+0x7aa>
    2ae0:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
    2ae7:	5b                   	pop    %rbx
    2ae8:	5d                   	pop    %rbp
    2ae9:	41 5c                	pop    %r12
    2aeb:	41 5d                	pop    %r13
    2aed:	41 5e                	pop    %r14
    2aef:	41 5f                	pop    %r15
    2af1:	c3                   	retq   
    2af2:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2af9:	3a 20 43 
    2afc:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2b03:	20 75 6e 
    2b06:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2b0a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2b0e:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2b15:	74 6f 20 
    2b18:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    2b1f:	65 20 73 
    2b22:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2b26:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2b2a:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
    2b31:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
    2b37:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2b3c:	eb 8b                	jmp    2ac9 <submitr+0x2fd>
    2b3e:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    2b45:	3a 20 44 
    2b48:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    2b4f:	20 75 6e 
    2b52:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2b56:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2b5a:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2b61:	74 6f 20 
    2b64:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    2b6b:	76 65 20 
    2b6e:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2b72:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2b76:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
    2b7d:	61 62 20 
    2b80:	48 ba 73 65 72 76 65 	movabs $0x6120726576726573,%rdx
    2b87:	72 20 61 
    2b8a:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2b8e:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2b92:	c7 45 30 64 64 72 65 	movl   $0x65726464,0x30(%rbp)
    2b99:	66 c7 45 34 73 73    	movw   $0x7373,0x34(%rbp)
    2b9f:	c6 45 36 00          	movb   $0x0,0x36(%rbp)
    2ba3:	89 df                	mov    %ebx,%edi
    2ba5:	e8 f6 e6 ff ff       	callq  12a0 <close@plt>
    2baa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2baf:	e9 15 ff ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2bb4:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    2bbb:	3a 20 55 
    2bbe:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    2bc5:	20 74 6f 
    2bc8:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2bcc:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2bd0:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    2bd7:	65 63 74 
    2bda:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
    2be1:	68 65 20 
    2be4:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2be8:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2bec:	48 b8 41 75 74 6f 6c 	movabs $0x2062616c6f747541,%rax
    2bf3:	61 62 20 
    2bf6:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2bfa:	c7 45 28 73 65 72 76 	movl   $0x76726573,0x28(%rbp)
    2c01:	66 c7 45 2c 65 72    	movw   $0x7265,0x2c(%rbp)
    2c07:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
    2c0b:	89 df                	mov    %ebx,%edi
    2c0d:	e8 8e e6 ff ff       	callq  12a0 <close@plt>
    2c12:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2c17:	e9 ad fe ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2c1c:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    2c23:	3a 20 52 
    2c26:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2c2d:	20 73 74 
    2c30:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2c34:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2c38:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
    2c3f:	74 6f 6f 
    2c42:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
    2c49:	65 2e 20 
    2c4c:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2c50:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2c54:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
    2c5b:	61 73 65 
    2c5e:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
    2c65:	49 54 52 
    2c68:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2c6c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2c70:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
    2c77:	55 46 00 
    2c7a:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2c7e:	89 df                	mov    %ebx,%edi
    2c80:	e8 1b e6 ff ff       	callq  12a0 <close@plt>
    2c85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2c8a:	e9 3a fe ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2c8f:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    2c96:	3a 20 52 
    2c99:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2ca0:	20 73 74 
    2ca3:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2ca7:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2cab:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
    2cb2:	63 6f 6e 
    2cb5:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
    2cbc:	20 61 6e 
    2cbf:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2cc3:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2cc7:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
    2cce:	67 61 6c 
    2cd1:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
    2cd8:	6e 70 72 
    2cdb:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2cdf:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2ce3:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
    2cea:	6c 65 20 
    2ced:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
    2cf4:	63 74 65 
    2cf7:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2cfb:	48 89 55 38          	mov    %rdx,0x38(%rbp)
    2cff:	66 c7 45 40 72 2e    	movw   $0x2e72,0x40(%rbp)
    2d05:	c6 45 42 00          	movb   $0x0,0x42(%rbp)
    2d09:	89 df                	mov    %ebx,%edi
    2d0b:	e8 90 e5 ff ff       	callq  12a0 <close@plt>
    2d10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2d15:	e9 af fd ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2d1a:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2d21:	3a 20 43 
    2d24:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2d2b:	20 75 6e 
    2d2e:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2d32:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2d36:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2d3d:	74 6f 20 
    2d40:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
    2d47:	20 74 6f 
    2d4a:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2d4e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2d52:	48 b8 20 74 68 65 20 	movabs $0x7475412065687420,%rax
    2d59:	41 75 74 
    2d5c:	48 ba 6f 6c 61 62 20 	movabs $0x7265732062616c6f,%rdx
    2d63:	73 65 72 
    2d66:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2d6a:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2d6e:	c7 45 30 76 65 72 00 	movl   $0x726576,0x30(%rbp)
    2d75:	89 df                	mov    %ebx,%edi
    2d77:	e8 24 e5 ff ff       	callq  12a0 <close@plt>
    2d7c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2d81:	e9 43 fd ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2d86:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2d8d:	3a 20 43 
    2d90:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2d97:	20 75 6e 
    2d9a:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2d9e:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2da2:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2da9:	74 6f 20 
    2dac:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
    2db3:	66 69 72 
    2db6:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2dba:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2dbe:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
    2dc5:	61 64 65 
    2dc8:	48 ba 72 20 66 72 6f 	movabs $0x41206d6f72662072,%rdx
    2dcf:	6d 20 41 
    2dd2:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2dd6:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2dda:	48 b8 75 74 6f 6c 61 	movabs $0x732062616c6f7475,%rax
    2de1:	62 20 73 
    2de4:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2de8:	c7 45 38 65 72 76 65 	movl   $0x65767265,0x38(%rbp)
    2def:	66 c7 45 3c 72 00    	movw   $0x72,0x3c(%rbp)
    2df5:	89 df                	mov    %ebx,%edi
    2df7:	e8 a4 e4 ff ff       	callq  12a0 <close@plt>
    2dfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2e01:	e9 c3 fc ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2e06:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2e0d:	00 
    2e0e:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    2e13:	ba 00 20 00 00       	mov    $0x2000,%edx
    2e18:	e8 fe f7 ff ff       	callq  261b <rio_readlineb>
    2e1d:	48 85 c0             	test   %rax,%rax
    2e20:	0f 8e 96 00 00 00    	jle    2ebc <submitr+0x6f0>
    2e26:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
    2e2b:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
    2e32:	0f 85 05 01 00 00    	jne    2f3d <submitr+0x771>
    2e38:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
    2e3f:	00 
    2e40:	48 89 ef             	mov    %rbp,%rdi
    2e43:	e8 08 e4 ff ff       	callq  1250 <strcpy@plt>
    2e48:	89 df                	mov    %ebx,%edi
    2e4a:	e8 51 e4 ff ff       	callq  12a0 <close@plt>
    2e4f:	b9 04 00 00 00       	mov    $0x4,%ecx
    2e54:	48 8d 3d 52 1a 00 00 	lea    0x1a52(%rip),%rdi        # 48ad <secret_tokens+0xed>
    2e5b:	48 89 ee             	mov    %rbp,%rsi
    2e5e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2e60:	0f 97 c0             	seta   %al
    2e63:	1c 00                	sbb    $0x0,%al
    2e65:	0f be c0             	movsbl %al,%eax
    2e68:	85 c0                	test   %eax,%eax
    2e6a:	0f 84 59 fc ff ff    	je     2ac9 <submitr+0x2fd>
    2e70:	b9 05 00 00 00       	mov    $0x5,%ecx
    2e75:	48 8d 3d 35 1a 00 00 	lea    0x1a35(%rip),%rdi        # 48b1 <secret_tokens+0xf1>
    2e7c:	48 89 ee             	mov    %rbp,%rsi
    2e7f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2e81:	0f 97 c0             	seta   %al
    2e84:	1c 00                	sbb    $0x0,%al
    2e86:	0f be c0             	movsbl %al,%eax
    2e89:	85 c0                	test   %eax,%eax
    2e8b:	0f 84 38 fc ff ff    	je     2ac9 <submitr+0x2fd>
    2e91:	b9 03 00 00 00       	mov    $0x3,%ecx
    2e96:	48 8d 3d 19 1a 00 00 	lea    0x1a19(%rip),%rdi        # 48b6 <secret_tokens+0xf6>
    2e9d:	48 89 ee             	mov    %rbp,%rsi
    2ea0:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2ea2:	0f 97 c0             	seta   %al
    2ea5:	1c 00                	sbb    $0x0,%al
    2ea7:	0f be c0             	movsbl %al,%eax
    2eaa:	85 c0                	test   %eax,%eax
    2eac:	0f 84 17 fc ff ff    	je     2ac9 <submitr+0x2fd>
    2eb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2eb7:	e9 0d fc ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2ebc:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2ec3:	3a 20 43 
    2ec6:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    2ecd:	20 75 6e 
    2ed0:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2ed4:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    2ed8:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2edf:	74 6f 20 
    2ee2:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
    2ee9:	73 74 61 
    2eec:	48 89 45 10          	mov    %rax,0x10(%rbp)
    2ef0:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    2ef4:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
    2efb:	65 73 73 
    2efe:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
    2f05:	72 6f 6d 
    2f08:	48 89 45 20          	mov    %rax,0x20(%rbp)
    2f0c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    2f10:	48 b8 20 41 75 74 6f 	movabs $0x62616c6f74754120,%rax
    2f17:	6c 61 62 
    2f1a:	48 ba 20 73 65 72 76 	movabs $0x72657672657320,%rdx
    2f21:	65 72 00 
    2f24:	48 89 45 30          	mov    %rax,0x30(%rbp)
    2f28:	48 89 55 38          	mov    %rdx,0x38(%rbp)
    2f2c:	89 df                	mov    %ebx,%edi
    2f2e:	e8 6d e3 ff ff       	callq  12a0 <close@plt>
    2f33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f38:	e9 8c fb ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2f3d:	4c 8d 8c 24 50 80 00 	lea    0x8050(%rsp),%r9
    2f44:	00 
    2f45:	48 8d 0d 1c 19 00 00 	lea    0x191c(%rip),%rcx        # 4868 <secret_tokens+0xa8>
    2f4c:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    2f53:	be 01 00 00 00       	mov    $0x1,%esi
    2f58:	48 89 ef             	mov    %rbp,%rdi
    2f5b:	b8 00 00 00 00       	mov    $0x0,%eax
    2f60:	e8 5b e4 ff ff       	callq  13c0 <__sprintf_chk@plt>
    2f65:	89 df                	mov    %ebx,%edi
    2f67:	e8 34 e3 ff ff       	callq  12a0 <close@plt>
    2f6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f71:	e9 53 fb ff ff       	jmpq   2ac9 <submitr+0x2fd>
    2f76:	e8 05 e3 ff ff       	callq  1280 <__stack_chk_fail@plt>

0000000000002f7b <init_timeout>:
    2f7b:	f3 0f 1e fa          	endbr64 
    2f7f:	85 ff                	test   %edi,%edi
    2f81:	74 26                	je     2fa9 <init_timeout+0x2e>
    2f83:	53                   	push   %rbx
    2f84:	89 fb                	mov    %edi,%ebx
    2f86:	78 1a                	js     2fa2 <init_timeout+0x27>
    2f88:	48 8d 35 71 f5 ff ff 	lea    -0xa8f(%rip),%rsi        # 2500 <sigalrm_handler>
    2f8f:	bf 0e 00 00 00       	mov    $0xe,%edi
    2f94:	e8 37 e3 ff ff       	callq  12d0 <signal@plt>
    2f99:	89 df                	mov    %ebx,%edi
    2f9b:	e8 f0 e2 ff ff       	callq  1290 <alarm@plt>
    2fa0:	5b                   	pop    %rbx
    2fa1:	c3                   	retq   
    2fa2:	bb 00 00 00 00       	mov    $0x0,%ebx
    2fa7:	eb df                	jmp    2f88 <init_timeout+0xd>
    2fa9:	c3                   	retq   

0000000000002faa <init_driver>:
    2faa:	f3 0f 1e fa          	endbr64 
    2fae:	41 54                	push   %r12
    2fb0:	55                   	push   %rbp
    2fb1:	53                   	push   %rbx
    2fb2:	48 83 ec 20          	sub    $0x20,%rsp
    2fb6:	48 89 fd             	mov    %rdi,%rbp
    2fb9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2fc0:	00 00 
    2fc2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2fc7:	31 c0                	xor    %eax,%eax
    2fc9:	be 01 00 00 00       	mov    $0x1,%esi
    2fce:	bf 0d 00 00 00       	mov    $0xd,%edi
    2fd3:	e8 f8 e2 ff ff       	callq  12d0 <signal@plt>
    2fd8:	be 01 00 00 00       	mov    $0x1,%esi
    2fdd:	bf 1d 00 00 00       	mov    $0x1d,%edi
    2fe2:	e8 e9 e2 ff ff       	callq  12d0 <signal@plt>
    2fe7:	be 01 00 00 00       	mov    $0x1,%esi
    2fec:	bf 1d 00 00 00       	mov    $0x1d,%edi
    2ff1:	e8 da e2 ff ff       	callq  12d0 <signal@plt>
    2ff6:	ba 00 00 00 00       	mov    $0x0,%edx
    2ffb:	be 01 00 00 00       	mov    $0x1,%esi
    3000:	bf 02 00 00 00       	mov    $0x2,%edi
    3005:	e8 c6 e3 ff ff       	callq  13d0 <socket@plt>
    300a:	85 c0                	test   %eax,%eax
    300c:	0f 88 9c 00 00 00    	js     30ae <init_driver+0x104>
    3012:	89 c3                	mov    %eax,%ebx
    3014:	48 8d 3d 9e 18 00 00 	lea    0x189e(%rip),%rdi        # 48b9 <secret_tokens+0xf9>
    301b:	e8 c0 e2 ff ff       	callq  12e0 <gethostbyname@plt>
    3020:	48 85 c0             	test   %rax,%rax
    3023:	0f 84 d1 00 00 00    	je     30fa <init_driver+0x150>
    3029:	49 89 e4             	mov    %rsp,%r12
    302c:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3033:	00 
    3034:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    303b:	00 00 
    303d:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
    3043:	48 63 50 14          	movslq 0x14(%rax),%rdx
    3047:	48 8b 40 18          	mov    0x18(%rax),%rax
    304b:	48 8b 30             	mov    (%rax),%rsi
    304e:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    3053:	b9 0c 00 00 00       	mov    $0xc,%ecx
    3058:	e8 93 e2 ff ff       	callq  12f0 <__memmove_chk@plt>
    305d:	66 c7 44 24 02 30 39 	movw   $0x3930,0x2(%rsp)
    3064:	ba 10 00 00 00       	mov    $0x10,%edx
    3069:	4c 89 e6             	mov    %r12,%rsi
    306c:	89 df                	mov    %ebx,%edi
    306e:	e8 0d e3 ff ff       	callq  1380 <connect@plt>
    3073:	85 c0                	test   %eax,%eax
    3075:	0f 88 e7 00 00 00    	js     3162 <init_driver+0x1b8>
    307b:	89 df                	mov    %ebx,%edi
    307d:	e8 1e e2 ff ff       	callq  12a0 <close@plt>
    3082:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
    3088:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
    308c:	b8 00 00 00 00       	mov    $0x0,%eax
    3091:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3096:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    309d:	00 00 
    309f:	0f 85 10 01 00 00    	jne    31b5 <init_driver+0x20b>
    30a5:	48 83 c4 20          	add    $0x20,%rsp
    30a9:	5b                   	pop    %rbx
    30aa:	5d                   	pop    %rbp
    30ab:	41 5c                	pop    %r12
    30ad:	c3                   	retq   
    30ae:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    30b5:	3a 20 43 
    30b8:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    30bf:	20 75 6e 
    30c2:	48 89 45 00          	mov    %rax,0x0(%rbp)
    30c6:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    30ca:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    30d1:	74 6f 20 
    30d4:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    30db:	65 20 73 
    30de:	48 89 45 10          	mov    %rax,0x10(%rbp)
    30e2:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    30e6:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
    30ed:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
    30f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    30f8:	eb 97                	jmp    3091 <init_driver+0xe7>
    30fa:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    3101:	3a 20 44 
    3104:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    310b:	20 75 6e 
    310e:	48 89 45 00          	mov    %rax,0x0(%rbp)
    3112:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    3116:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    311d:	74 6f 20 
    3120:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    3127:	76 65 20 
    312a:	48 89 45 10          	mov    %rax,0x10(%rbp)
    312e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    3132:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    3139:	72 20 61 
    313c:	48 89 45 20          	mov    %rax,0x20(%rbp)
    3140:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
    3147:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
    314d:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
    3151:	89 df                	mov    %ebx,%edi
    3153:	e8 48 e1 ff ff       	callq  12a0 <close@plt>
    3158:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    315d:	e9 2f ff ff ff       	jmpq   3091 <init_driver+0xe7>
    3162:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    3169:	3a 20 55 
    316c:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    3173:	20 74 6f 
    3176:	48 89 45 00          	mov    %rax,0x0(%rbp)
    317a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    317e:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    3185:	65 63 74 
    3188:	48 ba 20 74 6f 20 73 	movabs $0x76726573206f7420,%rdx
    318f:	65 72 76 
    3192:	48 89 45 10          	mov    %rax,0x10(%rbp)
    3196:	48 89 55 18          	mov    %rdx,0x18(%rbp)
    319a:	66 c7 45 20 65 72    	movw   $0x7265,0x20(%rbp)
    31a0:	c6 45 22 00          	movb   $0x0,0x22(%rbp)
    31a4:	89 df                	mov    %ebx,%edi
    31a6:	e8 f5 e0 ff ff       	callq  12a0 <close@plt>
    31ab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    31b0:	e9 dc fe ff ff       	jmpq   3091 <init_driver+0xe7>
    31b5:	e8 c6 e0 ff ff       	callq  1280 <__stack_chk_fail@plt>

00000000000031ba <driver_post>:
    31ba:	f3 0f 1e fa          	endbr64 
    31be:	53                   	push   %rbx
    31bf:	4c 89 cb             	mov    %r9,%rbx
    31c2:	45 85 c0             	test   %r8d,%r8d
    31c5:	75 18                	jne    31df <driver_post+0x25>
    31c7:	48 85 ff             	test   %rdi,%rdi
    31ca:	74 05                	je     31d1 <driver_post+0x17>
    31cc:	80 3f 00             	cmpb   $0x0,(%rdi)
    31cf:	75 37                	jne    3208 <driver_post+0x4e>
    31d1:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    31d6:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    31da:	44 89 c0             	mov    %r8d,%eax
    31dd:	5b                   	pop    %rbx
    31de:	c3                   	retq   
    31df:	48 89 ca             	mov    %rcx,%rdx
    31e2:	48 8d 35 e0 16 00 00 	lea    0x16e0(%rip),%rsi        # 48c9 <secret_tokens+0x109>
    31e9:	bf 01 00 00 00       	mov    $0x1,%edi
    31ee:	b8 00 00 00 00       	mov    $0x0,%eax
    31f3:	e8 48 e1 ff ff       	callq  1340 <__printf_chk@plt>
    31f8:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    31fd:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    3201:	b8 00 00 00 00       	mov    $0x0,%eax
    3206:	eb d5                	jmp    31dd <driver_post+0x23>
    3208:	48 83 ec 08          	sub    $0x8,%rsp
    320c:	41 51                	push   %r9
    320e:	49 89 c9             	mov    %rcx,%r9
    3211:	49 89 d0             	mov    %rdx,%r8
    3214:	48 89 f9             	mov    %rdi,%rcx
    3217:	48 89 f2             	mov    %rsi,%rdx
    321a:	be 39 30 00 00       	mov    $0x3039,%esi
    321f:	48 8d 3d 93 16 00 00 	lea    0x1693(%rip),%rdi        # 48b9 <secret_tokens+0xf9>
    3226:	e8 a1 f5 ff ff       	callq  27cc <submitr>
    322b:	48 83 c4 10          	add    $0x10,%rsp
    322f:	eb ac                	jmp    31dd <driver_post+0x23>
    3231:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3238:	00 00 00 
    323b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003240 <__libc_csu_init>:
    3240:	f3 0f 1e fa          	endbr64 
    3244:	41 57                	push   %r15
    3246:	4c 8d 3d 7b 3a 00 00 	lea    0x3a7b(%rip),%r15        # 6cc8 <__frame_dummy_init_array_entry>
    324d:	41 56                	push   %r14
    324f:	49 89 d6             	mov    %rdx,%r14
    3252:	41 55                	push   %r13
    3254:	49 89 f5             	mov    %rsi,%r13
    3257:	41 54                	push   %r12
    3259:	41 89 fc             	mov    %edi,%r12d
    325c:	55                   	push   %rbp
    325d:	48 8d 2d 6c 3a 00 00 	lea    0x3a6c(%rip),%rbp        # 6cd0 <__init_array_end>
    3264:	53                   	push   %rbx
    3265:	4c 29 fd             	sub    %r15,%rbp
    3268:	48 83 ec 08          	sub    $0x8,%rsp
    326c:	e8 8f dd ff ff       	callq  1000 <_init>
    3271:	48 c1 fd 03          	sar    $0x3,%rbp
    3275:	74 1f                	je     3296 <__libc_csu_init+0x56>
    3277:	31 db                	xor    %ebx,%ebx
    3279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3280:	4c 89 f2             	mov    %r14,%rdx
    3283:	4c 89 ee             	mov    %r13,%rsi
    3286:	44 89 e7             	mov    %r12d,%edi
    3289:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    328d:	48 83 c3 01          	add    $0x1,%rbx
    3291:	48 39 dd             	cmp    %rbx,%rbp
    3294:	75 ea                	jne    3280 <__libc_csu_init+0x40>
    3296:	48 83 c4 08          	add    $0x8,%rsp
    329a:	5b                   	pop    %rbx
    329b:	5d                   	pop    %rbp
    329c:	41 5c                	pop    %r12
    329e:	41 5d                	pop    %r13
    32a0:	41 5e                	pop    %r14
    32a2:	41 5f                	pop    %r15
    32a4:	c3                   	retq   
    32a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    32ac:	00 00 00 00 

00000000000032b0 <__libc_csu_fini>:
    32b0:	f3 0f 1e fa          	endbr64 
    32b4:	c3                   	retq   

Disassembly of section .fini:

00000000000032b8 <_fini>:
    32b8:	f3 0f 1e fa          	endbr64 
    32bc:	48 83 ec 08          	sub    $0x8,%rsp
    32c0:	48 83 c4 08          	add    $0x8,%rsp
    32c4:	c3                   	retq   
